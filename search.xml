<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/2019/10/29/MarkdownGrammar/"/>
      <url>/2019/10/29/MarkdownGrammar/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a>Markdown基本语法</h1><h2 id="0-特殊字符"><a href="#0-特殊字符" class="headerlink" title="(0) 特殊字符"></a>(0) 特殊字符</h2><p>Markdown对特殊字符处理不是很友好,很容易出现很奇怪的异常,其实就是因为文章中包含了特殊字符无法编译通过导致Hexo无法渲染<br>在写博客时,一定注意不要写这些字符,如果要写,就进行转义<br>有些人可能说可以使用反斜杠 \ 来处理,我这里不建议,因为我使用的时候没有解决问题。<br>下面是比较常见的几个:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">! &amp;<span class="comment">#33; — 惊叹号Exclamation mark </span></span><br><span class="line">” &amp;<span class="comment">#34; &amp;quot; 双引号Quotation mark </span></span><br><span class="line"><span class="comment"># &amp;#35; — 数字标志Number sign </span></span><br><span class="line">$ &amp;<span class="comment">#36; — 美元标志Dollar sign </span></span><br><span class="line">% &amp;<span class="comment">#37; — 百分号Percent sign </span></span><br><span class="line">&amp; &amp;<span class="comment">#38; &amp;amp; Ampersand </span></span><br><span class="line">‘ &amp;<span class="comment">#39; — 单引号Apostrophe </span></span><br><span class="line">( &amp;<span class="comment">#40; — 小括号左边部分Left parenthesis </span></span><br><span class="line">) &amp;<span class="comment">#41; — 小括号右边部分Right parenthesis </span></span><br><span class="line">* &amp;<span class="comment">#42; — 星号Asterisk </span></span><br><span class="line">+ &amp;<span class="comment">#43; — 加号Plus sign </span></span><br><span class="line">&lt; &amp;<span class="comment">#60; &amp;lt; 小于号Less than </span></span><br><span class="line">= &amp;<span class="comment">#61; — 等于符号Equals sign </span></span><br><span class="line">&gt; &amp;<span class="comment">#62; &amp;gt; 大于号Greater than </span></span><br><span class="line">? &amp;<span class="comment">#63; — 问号Question mark </span></span><br><span class="line">@ &amp;<span class="comment">#64; — Commercial at </span></span><br><span class="line">[ &amp;<span class="comment">#91; --- 中括号左边部分Left square bracket </span></span><br><span class="line">\ &amp;<span class="comment">#92; --- 反斜杠Reverse solidus (backslash) </span></span><br><span class="line">] &amp;<span class="comment">#93; — 中括号右边部分Right square bracket </span></span><br><span class="line">&#123; &amp;<span class="comment">#123; — 大括号左边部分Left curly brace </span></span><br><span class="line">| &amp;<span class="comment">#124; — 竖线Vertical bar </span></span><br><span class="line">&#125; &amp;<span class="comment">#125; — 大括号右边部分Right curly brace</span></span><br></pre></td></tr></table></figure><blockquote><p>特别注意的是小括号 ( ) 大括号 { } ,如果不小心写了,你执行hexo s –debug可能报一些莫名其妙的错误!<br><a href="http://www.cnblogs.com/xcsn/p/3559624.html" target="_blank" rel="noopener">这里还有更多关于特殊字符如何转义的内容</a></p></blockquote><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="(1) 标题"></a>(1) 标题</h2><p>在文字前加上#号</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br><span class="line"></span><br><span class="line"># 大标题</span><br><span class="line"></span><br><span class="line">## 小标题</span><br></pre></td></tr></table></figure><p>预览效果：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="大标题"><a href="#大标题" class="headerlink" title="大标题"></a>大标题</h1><h2 id="小标题"><a href="#小标题" class="headerlink" title="小标题"></a>小标题</h2><h2 id="粗体斜体"><a href="#粗体斜体" class="headerlink" title="粗体斜体"></a>粗体斜体</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*斜体文本*    _斜体文本_</span><br><span class="line">**粗体文本**    __粗体文本__</span><br><span class="line">***粗斜体文本***    ___粗斜体文本___123</span><br></pre></td></tr></table></figure><p>预览效果：<br><em>斜体文本</em> <em>斜体文本</em><br><strong>粗体文本</strong> <strong>粗体文本</strong></p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">常用链接方法</span><br><span class="line">文字链接 [链接名称](https://xjc5772.github.io)</span><br><span class="line">网址链接 &lt;https://xjc5772.github.io&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">高级链接技巧</span><br><span class="line">这个链接用 1 作为网址变量 [Google][1].</span><br><span class="line">这个链接用 baidu 作为网址变量 [Baidu!][baidu].</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">  [1]: http://www.google.com/</span><br><span class="line">  [Baidu]: http://www.baidu.com/</span><br></pre></td></tr></table></figure><p>预览效果：<br>文字链接 <a href="http://https://xjc5772.github.io/" target="_blank" rel="noopener">链接名称</a><br>网址链接 <a href="http://https://xjc5772.github.io/" target="_blank" rel="noopener">http://https://xjc5772.github.io</a></p><p>高级链接技巧<br>这个链接用 1 作为网址变量 <a href="http://www.google.com/" target="_blank" rel="noopener">Google</a>.<br>这个链接用 yahoo 作为网址变量 <a href="http://www.baidu.com/" target="_blank" rel="noopener">Baidu!</a>.</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>普通无序列表</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- 列表文本前使用 [减号+空格]</span><br><span class="line">+ 列表文本前使用 [加号+空格]</span><br><span class="line">* 列表文本前使用 [星号+空格]123</span><br></pre></td></tr></table></figure><p>普通有序列表</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 列表前使用 [数字+空格]</span><br><span class="line">2. 我们会自动帮你添加数字</span><br></pre></td></tr></table></figure><p>列表嵌套</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 列出所有元素：</span><br><span class="line">    - 无序列表元素 A</span><br><span class="line">        1. 元素 A 的有序子列表</span><br><span class="line">    - 前面加四个空格</span><br><span class="line">2. 列表里的多段换行：</span><br><span class="line">    前面必须加四个空格，</span><br><span class="line">    这样换行，整体的格式不会乱</span><br><span class="line">3. 列表里引用：</span><br><span class="line"></span><br><span class="line">    &gt; 前面空一行</span><br><span class="line">    &gt; 仍然需要在 &gt;  前面加四个空格</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>普通引用</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 引用文本前使用 [大于号+空格]</span><br><span class="line">&gt; 折行可以不加，新起一行都要加上哦12</span><br></pre></td></tr></table></figure><blockquote><blockquote><blockquote><p>引用里嵌套引用</p></blockquote></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 最外层引用</span><br><span class="line">&gt; &gt; 多一个 &gt; 嵌套一层引用</span><br><span class="line">&gt; &gt; &gt; 可以嵌套很多层123</span><br></pre></td></tr></table></figure><blockquote><ul><li><blockquote><ul><li>引用里嵌套列表</li></ul></blockquote></li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; - 这是引用里嵌套的一个列表</span><br><span class="line">&gt; - 还可以有子列表</span><br><span class="line">&gt;     * 子列表需要从 - 之后延后四个空格开始123</span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![图片名称](/图片地址)</span><br><span class="line">不过，也可以像网址那样对图片网址使用变量</span><br><span class="line"></span><br><span class="line">这个链接用 1 作为网址变量 [ Google] [ 1].</span><br><span class="line">然后在文档的结尾位变量赋值(网址)</span><br><span class="line">[1]: http: //www.google.com/logo.png</span><br></pre></td></tr></table></figure><p><img alt="logo" data-src="https://avatar.csdnimg.cn/8/3/C/1_qq_38496329.jpg" class="lazyload"></p><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>如果另起一行，只需在当前行结尾加 2 个空格</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在当前行的结尾加 2 个空格  </span><br><span class="line">这行就会新起一行</span><br><span class="line">如果是要起一个新段落，只需要空出一行即可。123</span><br></pre></td></tr></table></figure><h2 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h2><p>如果你有写分割线的习惯，可以新起一行输入三个减号-。当前后都有段落时，请空出一行：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">前面的段落</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">后面的段落</span><br></pre></td></tr></table></figure><h2 id="小型文本"><a href="#小型文本" class="headerlink" title="小型文本"></a>小型文本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;small&gt;文本内容&lt;/small&gt;</span><br></pre></td></tr></table></figure><p>预览效果：<br>我是正常文字<br><small>我是小型文字</small></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>Markdown的扩展语法，hexo已经支持</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| 布局           | 路径                 |</span><br><span class="line">| ------------- |:-------------------:|</span><br><span class="line">| post          | source/_posts   |  </span><br><span class="line">| page          | source           | </span><br><span class="line">| draft          | source/_drafts   |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">布局</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left"><code>post</code></td><td align="left"><code>source/_posts</code></td></tr><tr><td align="left"><code>page</code></td><td align="left"><code>source</code></td></tr><tr><td align="left"><code>draft</code></td><td align="left"><code>source/_drafts</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo文章的发布</title>
      <link href="/2019/10/28/issue/"/>
      <url>/2019/10/28/issue/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hexo文章发布"><a href="#Hexo文章发布" class="headerlink" title="Hexo文章发布"></a>Hexo文章发布</h1><h2 id="文章创建"><a href="#文章创建" class="headerlink" title="文章创建"></a>文章创建</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><blockquote><p>此处<code>layout</code>可以选择，也可以不选择。</p><ul><li><code>layout</code>指定文章的布局，默认<code>Post</code> ，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局 </li></ul></blockquote><blockquote><p> 此命令会在/source/_posts下创建一个文件名 <code>title.md</code>文件，然后就可以使用<code>markdown</code>编辑器开始写自己的博客了。</p><ul><li>那么文章编辑语法可以遵循<a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">markdownd</a>的语法</li></ul></blockquote><ul><li>打开生成的模板文章文件</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">new</span> <span class="string">post</span> <span class="comment">#博客标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="bullet">-10</span><span class="bullet">-28</span> <span class="number">21</span><span class="string">:20:57</span> <span class="comment">#创建时间</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">java</span> <span class="comment">#标签</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="模板配置（Scaffold）"><a href="#模板配置（Scaffold）" class="headerlink" title="模板配置（Scaffold）"></a>模板配置（Scaffold）</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td><td align="left"></td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td><td align="left">文章的文件名</td></tr><tr><td align="left"><code>date</code></td><td align="left">建立日期</td><td align="left">文件建立日期</td></tr><tr><td align="left"><code>updated</code></td><td align="left">更新日期</td><td align="left">文件更新日期</td></tr><tr><td align="left"><code>comments</code></td><td align="left">开启文章的评论功能</td><td align="left">true</td></tr><tr><td align="left"><code>tags</code></td><td align="left">标签（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>categories</code></td><td align="left">分类（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">覆盖文章网址</td><td align="left"></td></tr><tr><td align="left"><code>keywords</code></td><td align="left">仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</td><td align="left"></td></tr></tbody></table><h3 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h3><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建者三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><table><thead><tr><th align="left">布局</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left"><code>post</code></td><td align="left"><code>source/_posts</code></td></tr><tr><td align="left"><code>page</code></td><td align="left"><code>source</code></td></tr><tr><td align="left"><code>draft</code></td><td align="left"><code>source/_drafts</code></td></tr></tbody></table><p>更多文章编辑可参考<a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="noopener">官网文档</a></p><h2 id="文章发布异常处理"><a href="#文章发布异常处理" class="headerlink" title="文章发布异常处理"></a>文章发布异常处理</h2><h3 id="无法处理now函数异常"><a href="#无法处理now函数异常" class="headerlink" title="无法处理now函数异常"></a>无法处理<strong>now</strong>函数异常</h3><h4 id="异常内容"><a href="#异常内容" class="headerlink" title="异常内容"></a>异常内容</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">Error:</span> <span class="string">Unable</span> <span class="string">to</span> <span class="string">call</span> <span class="string">`now`,</span> <span class="string">which</span> <span class="string">is</span> <span class="string">undefined</span> <span class="string">or</span> <span class="string">falsey</span></span><br><span class="line"><span class="string">Template</span> <span class="string">render</span> <span class="attr">error:</span> <span class="string">(unknown</span> <span class="string">path)</span> <span class="string">[Line</span> <span class="number">3</span><span class="string">,</span> <span class="string">Column</span> <span class="number">253</span><span class="string">]</span></span><br><span class="line"><span class="attr">Error:</span> <span class="string">Unable</span> <span class="string">to</span> <span class="string">call</span> <span class="string">`now`,</span> <span class="string">which</span> <span class="string">is</span> <span class="string">undefined</span> <span class="string">or</span> <span class="string">falsey</span></span><br></pre></td></tr></table></figure><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><blockquote><p>这种一般是文章中使用了now( )，<code>小括号()</code>属于特殊字符,在编译文章时将now( )当函数处理了,结果找不到函数,就报错了。 </p></blockquote><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><blockquote><p> 将小括号通过<code>&amp;#40;</code>与<code>&amp;#41;</code> 进行转换为<code>小括号()</code></p></blockquote><h3 id="意外的函数体异常"><a href="#意外的函数体异常" class="headerlink" title="意外的函数体异常"></a>意外的函数体异常</h3><h4 id="异常内容-1"><a href="#异常内容-1" class="headerlink" title="异常内容"></a>异常内容</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">FATAL</span> <span class="string">(unknown</span> <span class="string">path)</span> <span class="string">[Line</span> <span class="number">14</span><span class="string">,</span> <span class="string">Column</span> <span class="number">6</span><span class="string">]</span></span><br><span class="line">  <span class="string">unexpected</span> <span class="attr">token:</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">Template</span> <span class="string">render</span> <span class="attr">error:</span> <span class="string">(unknown</span> <span class="string">path)</span> <span class="string">[Line</span> <span class="number">14</span><span class="string">,</span> <span class="string">Column</span> <span class="number">6</span><span class="string">]</span></span><br><span class="line">  <span class="string">unexpected</span> <span class="attr">token:</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><h4 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h4><blockquote><p> 这类异常一般是文章中使用了<code>大括号 {}</code> ，这很容易被判断为函数或者语句块儿的开始或者结尾，而导致编译不通过。</p></blockquote><h4 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h4><blockquote><p> 将大括号的通过<code>&amp;#123;</code>与<code>&amp;#125;</code>进行转换为<code>大括号{}</code></p></blockquote><h2 id="如何删除文章"><a href="#如何删除文章" class="headerlink" title="如何删除文章"></a>如何删除文章</h2><p>删除文章的很简单，先删除本地文件，然后通过生成和部署命令进而将远程仓库中的文件也一并删除。具体来说，以最开始默认形成的helloworld.md这篇文章为例。</p><blockquote><p>首先进入到source / _post 文件夹中，找到helloworld.md文件，在本地直接执行删除。然后依次执行<code>hexo g</code>，<code>hexo d</code>，再去主页查看你就会发现你的博客上面已经空空如也了，这就是如何删除文章的方法。</p></blockquote><hr><p>上述的各类异常可以参考<a href="https://xjc5772.github.io/2019/10/29/MarkdownGrammar/">Markdown语法特殊字符处理</a>总之，注意小心这些特殊字符，Hexo有点恶心的就在此处，有的该转义转义，该标记标记，能避免的避免特殊字符，祝大家都顺顺利利的跑起来啊</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 异常处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题安装与配置</title>
      <link href="/2019/10/27/Hexo%20theme/"/>
      <url>/2019/10/27/Hexo%20theme/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hexo主题安装与配置"><a href="#Hexo主题安装与配置" class="headerlink" title="Hexo主题安装与配置"></a>Hexo主题安装与配置</h1><h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p>　Hexo初始化之后默认的主题是<code>landscape</code>，当然，如果想要更换自己喜欢的主题，可以在Hexo官方给出的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a>中挑选喜欢的主题文件，点进去后还可以看见其中具体样式以作参考，随后在GitHub中搜索你要的主题名称，里面都会有该主题的如何使用的介绍。</p><blockquote><p>以下操作都得在博客的根目录进行安装</p></blockquote><p>此处以<code>butterfly</code>为例</p><h3 id="挑选主题"><a href="#挑选主题" class="headerlink" title="挑选主题"></a>挑选主题</h3><ul><li><p>到<a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo</a>官网看了下<code>butterfly</code>的样式，emm，还是很不错的，就它了</p><p>![挑选butterfly主题](./hexo theme/select_butterfly.png)</p></li></ul><blockquote><p>于是我点进去看了下…emm，很好看，就它了</p></blockquote><h3 id="搜寻主题"><a href="#搜寻主题" class="headerlink" title="搜寻主题"></a>搜寻主题</h3><blockquote><p>到GitHub里去搜索<code>Butterfly</code></p></blockquote><p>![GitHub-butterfly](./hexo theme/select_butterfly.png)</p><blockquote><p>直接点进去</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>![butterfly-安装](./hexo theme/butterfly_install.png)</p><h3 id="配置应用"><a href="#配置应用" class="headerlink" title="配置应用"></a>配置应用</h3><ul><li><p>安装渲染器（然后你会等很久很久，看部复联4吧🤭）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-renderer-jade hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p></li></ul><blockquote><p> 修改hexo配置文件<code>_config.yml</code>，把主题替换<code>Butterfly</code> </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: Butterfly</span><br></pre></td></tr></table></figure></blockquote><ul><li>然后三步走</li></ul><blockquote><ol><li>hexo clean</li><li>hexo g</li><li>hexo d</li></ol></blockquote><h1 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h1><h2 id="桃心点击效果"><a href="#桃心点击效果" class="headerlink" title="桃心点击效果"></a>桃心点击效果</h2><ul><li>在<code>/themes/*/source/js/src</code>下新建文件<code>clicklove.js</code>，接着把以下粘贴到<code>clicklove.js</code>文件中。 </li></ul><blockquote><p>注：此处 * 表示任意的主题文件目录，例如<code>/themes/butterfly/source/js/src</code></p></blockquote><ul><li>在<code>\themes\*\layout\_layout.swig</code>文件末尾添加</li></ul><h3 id="clicklove代码："><a href="#clicklove代码：" class="headerlink" title="clicklove代码："></a>clicklove代码：</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 爱心特效 */</span></span><br><span class="line"></span><br><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; s.length; e++) s[e].alpha &lt;= <span class="number">0</span> ? (t.body.removeChild(s[e].el), s.splice(e, <span class="number">1</span>)) : (s[e].y--, s[e].scale += <span class="number">.004</span>, s[e].alpha -= <span class="number">.013</span>, s[e].el.style.cssText = <span class="string">"left:"</span> + s[e].x + <span class="string">"px;top:"</span> + s[e].y + <span class="string">"px;opacity:"</span> + s[e].alpha + <span class="string">";transform:scale("</span> + s[e].scale + <span class="string">","</span> + s[e].scale + <span class="string">") rotate(45deg);background:"</span> + s[e].color + <span class="string">";z-index:99999"</span>);</span><br><span class="line">    requestAnimationFrame(r)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">"function"</span> == <span class="keyword">typeof</span> e.onclick &amp;&amp; e.onclick;</span><br><span class="line">    e.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      t &amp;&amp; t(), o(e)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.createElement(<span class="string">"div"</span>);</span><br><span class="line">    a.className = <span class="string">"heart"</span>, s.push(&#123;</span><br><span class="line">      el: a,</span><br><span class="line">      x: e.clientX - <span class="number">5</span>,</span><br><span class="line">      y: e.clientY - <span class="number">5</span>,</span><br><span class="line">      scale: <span class="number">1</span>,</span><br><span class="line">      alpha: <span class="number">1</span>,</span><br><span class="line">      color: c()</span><br><span class="line">    &#125;), t.body.appendChild(a)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.createElement(<span class="string">"style"</span>);</span><br><span class="line">    a.type = <span class="string">"text/css"</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      a.appendChild(t.createTextNode(e))</span><br><span class="line">    &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">      a.styleSheet.cssText = e</span><br><span class="line">    &#125;</span><br><span class="line">    t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"rgb("</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">")"</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> s = [];</span><br><span class="line">  e.requestAnimationFrame = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    setTimeout(e, <span class="number">1e3</span> / <span class="number">60</span>)</span><br><span class="line">  &#125;, i(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>), n(), r()</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure> <!-- 页面点击小红心 --><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/clicklove.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="例图："><a href="#例图：" class="headerlink" title="例图："></a>例图：</h3><p>![小红心点击效果](./hexo theme/click_love.png)</p><h2 id="富强-民主点击效果"><a href="#富强-民主点击效果" class="headerlink" title="富强/民主点击效果"></a>富强/民主点击效果</h2><h3 id="clicksocialvalue代码："><a href="#clicksocialvalue代码：" class="headerlink" title="clicksocialvalue代码："></a>clicksocialvalue代码：</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 社会主体核心价值观效果 */</span></span><br><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"rgb("</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">")"</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  $(<span class="string">"body"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"富强"</span>, <span class="string">"民主"</span>, <span class="string">"文明"</span>, <span class="string">"和谐"</span>, <span class="string">"自由"</span>, <span class="string">"平等"</span>, <span class="string">"公正"</span>, <span class="string">"法治"</span>, <span class="string">"爱国"</span>, <span class="string">"敬业"</span>, <span class="string">"诚信"</span>, <span class="string">"友善"</span>);</span><br><span class="line">    <span class="keyword">var</span> $i = $(<span class="string">"&lt;span/&gt;"</span>).text(a[a_idx]);</span><br><span class="line">    a_idx = (a_idx + <span class="number">1</span>) % a.length;</span><br><span class="line">    <span class="keyword">var</span> x = e.pageX,</span><br><span class="line">      y = e.pageY;</span><br><span class="line">    $i.css(&#123;</span><br><span class="line">      <span class="string">"z-index"</span>: <span class="number">100000000</span>,</span><br><span class="line">      <span class="string">"top"</span>: y - <span class="number">20</span>,</span><br><span class="line">      <span class="string">"left"</span>: x,</span><br><span class="line">      <span class="string">"position"</span>: <span class="string">"absolute"</span>,</span><br><span class="line">      <span class="string">"font-weight"</span>: <span class="string">"bold"</span>,</span><br><span class="line">      <span class="string">"color"</span>: c(),</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">"body"</span>).append($i);</span><br><span class="line">    $i.animate(&#123;</span><br><span class="line">      <span class="string">"top"</span>: y - <span class="number">180</span>,</span><br><span class="line">      <span class="string">"opacity"</span>: <span class="number">0</span></span><br><span class="line">    &#125;, <span class="number">1500</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      $i.remove();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><!-- 页面点击富强、民主 --><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/clicksocialvalue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="例图：-1"><a href="#例图：-1" class="headerlink" title="例图："></a>例图：</h3><p>![富强/民主点击效果](./hexo theme/click_democracy.png)</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Hexo主题 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo安装与部署</title>
      <link href="/2019/10/27/Init/"/>
      <url>/2019/10/27/Init/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hexo博客搭建与部署"><a href="#Hexo博客搭建与部署" class="headerlink" title="Hexo博客搭建与部署"></a>Hexo博客搭建与部署</h1><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>.（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</p><ol><li>安装Node.js</li><li>安装Git</li></ol><blockquote><p><em>安装过程另附</em></p></blockquote><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p>安装好上述的两个软件，搭建好环境后就可以开始搞一搞了</p><ol><li>打开Git命令行(Git bash)运行一下命令——安装Hexo</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. npm install -g hexo-cli</span><br><span class="line">2. npm i -g hexo</span><br></pre></td></tr></table></figure><ol start="2"><li><p>初始化Hexo，在命令行（即<code>Git Bash</code>）依次运行以下命令即可：</p><blockquote><p>以下，<code>&lt;folder&gt;</code>即存放Hexo初始化文件的路径， 即站点目录</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>​    新建完成后，在路径下，会产生这些文件和文件夹：</p><p><strong>注</strong>：</p><ul><li><p>hexo相关命令均在<strong>站点目录</strong>下，用<strong><code>Git Bash</code></strong>运行。</p></li><li><p>站点配置文件：站点目录下的<code>_config.yml</code>。</p></li></ul><p>路径为<code>&lt;folder&gt;\_config.yml</code></p><ul><li>主题配置文件：站点目录下的<code>themes</code>文件夹下的，主题文件夹下的<code>_config.yml</code>。</li></ul><p>路径为<code>&lt;folder&gt;\themes\&lt;主题文件夹&gt;\_config.yml</code></p></blockquote><ol start="3"><li>启动服务器。在路径下，命令行（即<code>Git Bash</code>）输入以下命令，运行即可：</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><ol start="4"><li>浏览器访问网址： <code>http://localhost:4000/</code></li></ol><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><table><thead><tr><th align="center">资源</th><th align="center">内容/作用</th></tr></thead><tbody><tr><td align="center">package.json</td><td align="center">应用程序的信息。</td></tr><tr><td align="center">scaffolds</td><td align="center">模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</td></tr><tr><td align="center">source</td><td align="center">资源文件夹是存放用户资源的地方</td></tr><tr><td align="center">themes</td><td align="center">主题 文件夹。Hexo 会根据主题来生成静态页面。</td></tr><tr><td align="center">_config.yml</td><td align="center">网站的 配置 信息，您可以在此配置大部分的参数。</td></tr></tbody></table><h4 id="常用几个配置文件"><a href="#常用几个配置文件" class="headerlink" title="常用几个配置文件"></a>常用几个配置文件</h4><h5 id="全局配置文件"><a href="#全局配置文件" class="headerlink" title="全局配置文件"></a>全局配置文件</h5><ul><li><strong>Hexo/_config.yml</strong>    –（<strong>Hexo代表博客根目录</strong>）</li></ul><blockquote><p>根目录下的<a href>_config.yml</a>，用作配置网页全局的文件</p></blockquote><h6 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h6><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>title</code></td><td align="left">网站标题</td></tr><tr><td align="left"><code>subtitle</code></td><td align="left">网站副标题</td></tr><tr><td align="left"><code>description</code></td><td align="left">网站描述</td></tr><tr><td align="left"><code>keywords</code></td><td align="left">网站的关键词。使用半角逗号 <code>,</code> 分隔多个关键词。</td></tr><tr><td align="left"><code>author</code></td><td align="left">您的名字</td></tr><tr><td align="left"><code>language</code></td><td align="left">网站使用的语言</td></tr><tr><td align="left"><code>timezone</code></td><td align="left">网站时区。Hexo 默认使用您电脑的时区。<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="noopener">时区列表</a>。比如说：<code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。</td></tr></tbody></table><blockquote><p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p></blockquote><h6 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h6><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>url</code></td><td align="left">网址</td><td align="left"></td></tr><tr><td align="left"><code>root</code></td><td align="left">网站根目录</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks" target="_blank" rel="noopener">永久链接</a> 格式</td><td align="left"><code>:year/:month/:day/:title/</code></td></tr><tr><td align="left"><code>permalink_defaults</code></td><td align="left">永久链接中各部分的默认值</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls</code></td><td align="left">改写 <a href="https://hexo.io/zh-cn/docs/variables" target="_blank" rel="noopener"><code>permalink</code></a> 的值来美化 URL</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls.trailing_index</code></td><td align="left">是否在永久链接中保留尾部的 <code>index.html</code>，设置为 <code>false</code> 时去除</td><td align="left"><code>true</code></td></tr></tbody></table><p><strong>网站存放在子目录</strong></p><blockquote><p>如果您的网站存放在子目录中，例如 <code>http://yoursite.com/hexo</code>，则请将您的 <code>url</code> 设为 <code>http://yoursite.com/blog</code> 并把 <code>root</code> 设为 <code>/hexo/</code>。</p></blockquote><ul><li><strong>blog/themes/next/_config.yml</strong>    –（<strong>next代表当前使用的主题文件目录</strong>）</li></ul><blockquote><p>主题目录下的<a href>_config.yml</a>，用作配置主题的文件</p></blockquote><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="部署到GItHub"><a href="#部署到GItHub" class="headerlink" title="部署到GItHub"></a>部署到GItHub</h3><ul><li>创建一个<code>repository——版本库</code>，名称为<code>yourname.github.io</code>，其中<code>yourname</code>是你的GitHub名称，按照这个规则创建才有用</li></ul><blockquote><p>eg：<a href="https://github.com/xjc5772/xjc5772.github.io" target="_blank" rel="noopener">xjc5772.github.io</a>  这是我的GItHub命名</p></blockquote><p><img alt="GitHub库的创建" data-src="https://i.loli.net/2019/10/30/WkmKsHUtwQglj2v.png" class="lazyload"></p><ul><li>接着在GitBash中，配置GitHub的账户信息（YourName和YourEmail换成GitHub的用户信息）</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"YourName"</span></span><br><span class="line">$ git config --global user.email <span class="string">"YourEmail"</span></span><br></pre></td></tr></table></figure><p>若怕命令错处的话，可以键入命令键入下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config user.name</span><br><span class="line">$ git config user.email</span><br></pre></td></tr></table></figure><ul><li>创建SSH。生成SSH。然后按下图的方式找到<code>id_rsa.pub</code>，查看<code>id_rsa.pub</code>，获取SSH</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"YourEmail"</span></span><br><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ cat id_rsa.pub</span><br></pre></td></tr></table></figure><ul><li>配置SSH。将获取的SSH放到GitHub中</li></ul><blockquote><p>添加一个 <code>New SSH key</code> ，title随便取，key就填刚刚那一段。</p></blockquote><p><img alt="配置SSH" data-src="https://i.loli.net/2019/10/30/DXHn3y2xLtb7alO.png" class="lazyload"></p><p><img alt="添加SSH" data-src="https://i.loli.net/2019/10/30/BQPYkKhNWwJvnaA.png" class="lazyload"></p><blockquote><p>在Gitbash中验证是否添加成功：<code>ssh -T git@github.com</code></p></blockquote><ul><li>配置<code>_config.yml</code>。打开根目录下的<code>_config.yml</code>，修改文件配置（<em>冒号之后都是有一个半角空格的</em>）</li></ul><blockquote><p>url: <a href="https://YourgithubName.github.io/" target="_blank" rel="noopener">https://YourgithubName.github.io/</a></p></blockquote><blockquote><p>deploy:<br>    type: git<br>    repo: <a href="https://github.com/YourgithubName/YourgithubName.github.io.git" target="_blank" rel="noopener">https://github.com/YourgithubName/YourgithubName.github.io.git</a><br>    branch: master</p></blockquote><p><strong>deploy</strong></p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>repo</code></td><td align="left">库（Repository）地址</td></tr><tr><td align="left"><code>branch</code></td><td align="left">分支名称。如果不指定，则默认值为 master</td></tr><tr><td align="left"><code>message</code></td><td align="left">自定义提交信息 (默认为  Site updated: &#123; &#123;  now(‘YYYY-MM-DD HH:mm:ss’) &#125; &#125; )</td></tr></tbody></table><ul><li>安装<code>deploy-git</code>。安装部署命令，这样才能用命令部署到GitHub</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ul><li>接着依次执行下列命令：</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><blockquote><p>hexo clean清除了你之前生成的东西，也可以不加。</p><p>hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写</p><p>hexo deploy 部署文章，可以用hexo d缩写</p><p>注意deploy时可能要你输入username和password</p></blockquote><ul><li>在浏览器中输入<code>http://yourgithubname.github.io</code>就可以看到你的个人博客啦，嗨不嗨！</li><li>感觉gitbash中东西太多的时候输入<code>clear</code>命令清空。</li></ul><blockquote><p>后续会更新Hexo的主题安装与配置，毕竟一个好的、优美的页面更能给人带来愉悦感</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/10/20/hello-world/"/>
      <url>/2019/10/20/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>

<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数的颠倒问题</title>
      <link href="/2019/12/11/%E6%95%B0%E7%9A%84%E9%A2%A0%E5%80%92%E9%97%AE%E9%A2%98/"/>
      <url>/2019/12/11/%E6%95%B0%E7%9A%84%E9%A2%A0%E5%80%92%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数的颠倒"><a href="#数的颠倒" class="headerlink" title="数的颠倒"></a>数的颠倒</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><blockquote><p>给定一个范围为 32 位 int 的整数，将其颠倒。<br>例如，给定123,返回321;给定-12, 返回-21;给定120,返回21 。</p></blockquote><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>首先应该判断该数字是否符合题意，是否在给定范围内。<br>其次将判断数字末尾是否包含<code>0</code>，<br>接着<br>注意0作首位情况要舍去0</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;//strlen获取数组实际长度方法 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> num[N]=<span class="string">"\0"</span>;<span class="comment">//初始化数组</span></span><br><span class="line"><span class="keyword">char</span> new_num[N]=<span class="string">"\0"</span>;<span class="comment">//初始化新数组</span></span><br><span class="line"><span class="keyword">int</span> len=<span class="number">0</span>;<span class="comment">//数组长度变量 </span></span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">gets(num);</span><br><span class="line">len=<span class="built_in">strlen</span>(num);</span><br><span class="line"><span class="comment">//判断长度之前，首先考虑是整数还是负数</span></span><br><span class="line"><span class="comment">//正数长度在32位，负数长度在33位（包括一个符号位） </span></span><br><span class="line"><span class="comment">//判读长度范围，否则 return -1 </span></span><br><span class="line"><span class="keyword">if</span>(num[<span class="number">0</span>]!=<span class="string">'-'</span>)&#123;</span><br><span class="line"><span class="comment">//正数</span></span><br><span class="line"><span class="keyword">if</span>(len&gt;<span class="number">0</span>&amp;&amp;len&lt;<span class="number">33</span>)<span class="comment">//32位数字，无符号位</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(num[len<span class="number">-1</span>]==<span class="string">'0'</span>)&#123;</span><br><span class="line">num[len<span class="number">-1</span>]=<span class="string">'\0'</span>;<span class="comment">//减去末尾</span></span><br><span class="line">len=<span class="built_in">strlen</span>(num);<span class="comment">//返回新长度</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">new_num[i]=num[len<span class="number">-1</span>-i];<span class="comment">//倒置交换</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(new_num);<span class="comment">//输出</span></span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//负数</span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(len&gt;<span class="number">0</span>&amp;&amp;len&lt;=<span class="number">33</span>)<span class="comment">//32位数字，1位符号位</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(num[len<span class="number">-1</span>]==<span class="string">'0'</span>)&#123;</span><br><span class="line">num[len<span class="number">-1</span>]=<span class="string">'\0'</span>;<span class="comment">//减去末尾</span></span><br><span class="line">len=<span class="built_in">strlen</span>(num);<span class="comment">//返回新长度</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">new_num[i]=num[i];<span class="comment">//第一位符号位，原样返回至首位</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">new_num[i]=num[len-i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(new_num);</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><code>正数</code></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">54645645645456</span></span><br><span class="line"><span class="number">65454654654645</span></span><br><span class="line"></span><br><span class="line">--------------------------------</span><br><span class="line">Process exited with <span class="keyword">return</span> value <span class="number">0</span></span><br><span class="line">Press any key to <span class="keyword">continue</span> . . .</span><br></pre></td></tr></table></figure><p><code>负数</code></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">-43534300</span></span><br><span class="line"><span class="number">-343534</span></span><br><span class="line"></span><br><span class="line">--------------------------------</span><br><span class="line">Process exited with <span class="keyword">return</span> value <span class="number">0</span></span><br><span class="line">Press any key to <span class="keyword">continue</span> . . .</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在这里遇到很多坑，32位长度的数字，无法使用合理的数据类型来装，都会倒置<code>数据溢出</code>，于是采用数组存每一个数字，关于数组持续输入，采用<code>gets()</code>方法，持续输入到数组里面，对于数的正负判断，同样规定数组长度范围</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 算法 </tag>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>圆的面积问题</title>
      <link href="/2019/12/10/%E5%9C%86%E7%9A%84%E9%9D%A2%E7%A7%AF%E9%97%AE%E9%A2%98/"/>
      <url>/2019/12/10/%E5%9C%86%E7%9A%84%E9%9D%A2%E7%A7%AF%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="圆的面积"><a href="#圆的面积" class="headerlink" title="圆的面积"></a>圆的面积</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定圆的半径r，求圆的面积。<br>输入格式<br>输入包含一个整数r，表示圆的半径。<br>输出格式<br>输出一行，包含一个实数，四舍五入<code>保留小数点后7位</code>，表示圆的面积。 </p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><blockquote><p>在本题中，输入是一个整数，但是输出是一个实数。<br>对于实数输出的问题，一定看清楚实数输出的要求<br>本题中要求保留小数点后7位，则你的程序必须严格的输出7位小数，输出过多或者过少的小数位数都是不行的，都会被认为错误的。<br><code>实数输出的问题如果没有特别说明，舍入都是按四舍五入进行的</code></p></blockquote><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;  //atan函数 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI atan(1.0)*4</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;r);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.7f"</span>,PI*r*r);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">15</span></span><br><span class="line"><span class="number">706.8583471</span></span><br><span class="line">--------------------------------</span><br><span class="line">Process exited with <span class="keyword">return</span> value <span class="number">0</span></span><br><span class="line">Press any key to <span class="keyword">continue</span> . . .</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这里的精度控制采用<code>%.7f</code><br>①对<code>π</code> ，取值时可以直接引用数学公式<code>atan(1.0)*4——引入库 #include &lt;math.h&gt;</code><br>②<code>float</code>型数据，最多保留小数点后6位小数，精确到小数点后几位，输出时按（例：<code>%.7f</code>）格式（基本语句！！）<br>③如果输出用%.7lf 则CPU会占用15ms，用%.7f 输出，CPU占用0ms</p><blockquote><p><code>注：此处的PI要么用就给很长很长的小数（那你得记得住），要么采用数学公式得到PI的值</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 算法 </tag>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fibonacc数列Fn取余</title>
      <link href="/2019/12/10/Fibonacc%E6%95%B0%E5%88%97Fn%E5%8F%96%E4%BD%99/"/>
      <url>/2019/12/10/Fibonacc%E6%95%B0%E5%88%97Fn%E5%8F%96%E4%BD%99/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Fibonacc数列Fn项取余"><a href="#Fibonacc数列Fn项取余" class="headerlink" title="Fibonacc数列Fn项取余"></a>Fibonacc数列Fn项取余</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>斐波那契数列是一组第一位F1和第二位F2为1，从第三位开始，后一位是前两位和的一组递增数列Fn=Fn-1+Fn-2。 那么当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。</p><blockquote><p>如：<br>输入格式<br>输入包含一个整数n。<br>输出格式<br>输出一行，包含一个整数，表示Fn除以10007的余数。</p></blockquote><blockquote><p><code>样例输入10 此时Fibonacc[ ] = {1,1,2,3,5,8,13,21,34,55}</code><br><code>样例输出55</code></p></blockquote><blockquote><p><code>样例输入22 此时Fibonacc[ ] = {1,1,2,3,5,8,13,21,34,55…,10946,17711}</code><br><code>样例输出7704</code></p></blockquote><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>此处使用了动态定义数组方式，将数组实现动态规划长度，使用了<code>malloc</code>函数，关于<code>malloc</code>函数可以参照<a href="https://blog.csdn.net/chf_1/article/details/78688557" target="_blank" rel="noopener">malloc的用法和意义</a>，有关于<code>malloc</code>的一些详细讲解，在这儿不做过多的解释，简要介绍些动态定义数组长度的方式</p><blockquote><p>malloc函数的使用格式一般为<br>int len;<br>int * Num = (int*)malloc(sizeof(int) * len); //len生成的数组长度，<br><code>此时Num就是一个为int类型的，可以容纳len个元素的动态数组</code></p></blockquote><p><code>注：malloc是按字节数生成的空间大小，不是按照数组长度；动态数组最后要free掉，这点和new生成后要delete的道理一致</code></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10007</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> *num;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">num=(<span class="keyword">int</span> *)<span class="built_in">malloc</span>(n*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));<span class="comment">//动态规划数组，长度为 n </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;<span class="number">2</span>)</span><br><span class="line">num[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">num[i]=(num[i<span class="number">-1</span>]+num[i<span class="number">-2</span>])%N;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,num[n<span class="number">-1</span>]);</span><br><span class="line"><span class="built_in">free</span>(num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">55</span></span><br><span class="line">--------------------------------</span><br><span class="line">Process exited with <span class="keyword">return</span> value <span class="number">0</span></span><br><span class="line">Press any key to <span class="keyword">continue</span> . . .</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">22</span></span><br><span class="line"><span class="number">7704</span></span><br><span class="line">--------------------------------</span><br><span class="line">Process exited with <span class="keyword">return</span> value <span class="number">0</span></span><br><span class="line">Press any key to <span class="keyword">continue</span> . . .</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>对于此类斐波拉契数列如果是采用数组方式，则要考虑到数组的长度定义问题，可以给定一个很大范围的数组，这样未来保证数组不会越界，也可以采用<code>malloc</code>动态定义数组的长度，为了控制数据类型不会溢出，在此将每一项的的余数存放在数组里面，保证了每一项都小于<code>N</code> <code>10007</code>，也控制了数据范围在Int内可以得到</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 算法 </tag>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>斐波拉契数列</title>
      <link href="/2019/12/10/Fibonacc/"/>
      <url>/2019/12/10/Fibonacc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="斐波拉契数列"><a href="#斐波拉契数列" class="headerlink" title="斐波拉契数列"></a>斐波拉契数列</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>斐波那契数列是一组第一位<code>F1</code>和第二位<code>F2</code>为1，从第三位开始，后一位是前两位和的一组递增数列<code>Fn</code>=<code>Fn-1</code>+<code>Fn-2</code>。<br>那么当<code>n</code>比较大时，<code>Fn</code>也非常大，现在我们想知道，第<code>n</code>项，<code>Fn</code>等于多少</p><blockquote><p>如：<br>输入格式<br>输入包含一个整数n。<br>输出格式<br>输出一行，包含一个整数，表示Fn。</p></blockquote><blockquote><p><code>样例输入10</code>     此时Fibonacc[ ] = {1,1,2,3,5,8,13,21,34,55}<br><code>样例输出55</code></p></blockquote><blockquote><p><code>样例输入28</code>     此时Fibonacc[ ] = {1,1,2,3,5,8,13,21,34,55…,10946,17711}<br><code>样例输出317811</code></p></blockquote><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>数组前两位默认为1，那么就可以从第三位开始，或者在计算的时候实现一个判断，将前两位返回1。实现方式有许多</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="数组方式"><a href="#数组方式" class="headerlink" title="数组方式"></a><code>数组方式</code></h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> *num;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">num=(<span class="keyword">int</span> *)<span class="built_in">malloc</span>(n*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));<span class="comment">//动态规划数组，长度为 n </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;<span class="number">2</span>)</span><br><span class="line">num[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">num[i]=num[i<span class="number">-1</span>]+num[i<span class="number">-2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,num[n<span class="number">-1</span>]);</span><br><span class="line"><span class="built_in">free</span>(num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归方式"><a href="#递归方式" class="headerlink" title="递归方式"></a><code>递归方式</code></h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Fibonacc</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>||n==<span class="number">2</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> Fibonacc(n<span class="number">-2</span>)+Fibonacc(n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; Fibonacc(n)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="非递归方式"><a href="#非递归方式" class="headerlink" title="非递归方式"></a><code>非递归方式</code></h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Fibonacc</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> f_left=<span class="number">1</span>;<span class="comment">//左边一个数</span></span><br><span class="line"><span class="keyword">int</span> f_right=<span class="number">1</span>;<span class="comment">//右边一个数</span></span><br><span class="line"><span class="keyword">int</span> f_n=<span class="number">0</span>;<span class="comment">//结果数</span></span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>||n==<span class="number">2</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)&#123;</span><br><span class="line">f_n=f_left+f_right;<span class="comment">//先左数+右数得到一个新的结果</span></span><br><span class="line">f_left=f_right;<span class="comment">//此时右边的数作为新的左数</span></span><br><span class="line">f_right=f_n;<span class="comment">//刚才的结果作为新的右数</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> f_n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; Fibonacc(n)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">55</span></span><br><span class="line">--------------------------------</span><br><span class="line">Process exited with <span class="keyword">return</span> value <span class="number">0</span></span><br><span class="line">Press any key to <span class="keyword">continue</span> . . .</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">28</span></span><br><span class="line"><span class="number">317811</span></span><br><span class="line">--------------------------------</span><br><span class="line">Process exited with <span class="keyword">return</span> value <span class="number">0</span></span><br><span class="line">Press any key to <span class="keyword">continue</span> . . .</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>对于此类斐波拉契数列如果是采用数组方式，则要考虑到数组的长度定义问题，那么就需要动态定义数组长度，数组分别记录数列的每一项，占用内存则会太多，如果是采用递归，则不需要那么繁琐，依次累加最终得到最后一项，但是时间则需要太多，各个方式有利有弊。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 算法 </tag>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式之工厂模式</title>
      <link href="/2019/12/09/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/12/09/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>为什么要学设计模式</p><h2 id="程序设计原则"><a href="#程序设计原则" class="headerlink" title="程序设计原则"></a>程序设计原则</h2><ol><li>单一原则（降低耦合度）<br>两者各做各的事儿，要实现复合型功能，那么就采取合作</li><li>增强代码复用性（抽取公共的部分）</li></ol><blockquote><p>创建三个类，表示三个国家的人，分别包含<code>name</code>,<code>age</code>,<code>sex</code>,<code>national</code>，另带一个方法，说出国家名。 </p></blockquote><blockquote><p>小白之冗余模式：</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> A=<span class="function"><span class="keyword">function</span>(<span class="params">name,age,sex,national</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> obj=&#123;&#125;;</span><br><span class="line">    obj.name=name;</span><br><span class="line">    obj.age=age;</span><br><span class="line">    obj.sex=sex;</span><br><span class="line">    obj.national=national;</span><br><span class="line">    obj.speak=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"speak A"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> B=<span class="function"><span class="keyword">function</span>(<span class="params">name,age,sex,national</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> obj=&#123;&#125;;</span><br><span class="line">    obj.name=name;</span><br><span class="line">    obj.age=age;</span><br><span class="line">    obj.sex=sex;</span><br><span class="line">    obj.national=national;</span><br><span class="line">    obj.speak=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"speak B"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> C=<span class="function"><span class="keyword">function</span>(<span class="params">name,age,sex,national</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> obj=&#123;&#125;;</span><br><span class="line">    obj.name=name;</span><br><span class="line">    obj.age=age;</span><br><span class="line">    obj.sex=sex;</span><br><span class="line">    obj.national=national;</span><br><span class="line">    obj.speak=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"speak C"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么此处可以看到，每一个国家都要构建一个类，多要重复赋值属性，与编写方法，代码复用性不强，应将代码公共部分抽出来，采用抽象思想，将公共部分抽象出来，做成一个框架，一个规范，具体是如何实现通过需要进行批量生产出来，其中就包含所需要的公共部分</p><blockquote><p>抽象工厂模式</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age,sex,national</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.name=name;</span><br><span class="line">            <span class="keyword">this</span>.age=age;</span><br><span class="line">            <span class="keyword">this</span>.sex=sex;</span><br><span class="line">            <span class="keyword">this</span>.national=national;</span><br><span class="line">        &#125;</span><br><span class="line">        Person.prototype.speak=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"父类的抽象方法，无实际内容"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 实例A</span></span><br><span class="line">        <span class="keyword">var</span> A=<span class="function"><span class="keyword">function</span>(<span class="params">name,age,sex,national</span>)</span>&#123;</span><br><span class="line">            Person.call(<span class="keyword">this</span>,name,age,sex,national);</span><br><span class="line">        &#125;</span><br><span class="line">        A.prototype.speak=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"speak A"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">new</span> A().speak();</span><br><span class="line">        <span class="comment">//实例B</span></span><br><span class="line">        <span class="keyword">var</span> B=<span class="function"><span class="keyword">function</span>(<span class="params">name,age,sex,national</span>)</span>&#123;</span><br><span class="line">            Person.call(<span class="keyword">this</span>,name,age,sex,national);</span><br><span class="line">        &#125;</span><br><span class="line">        B.prototype.speak=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"speak B"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">new</span> B().speak();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工厂模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tampermonkey油猴脚本的安装与使用</title>
      <link href="/2019/12/09/Tampermonkey_Init/"/>
      <url>/2019/12/09/Tampermonkey_Init/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>Tampermonkey安装地址</p><blockquote><p>百度网盘<br>链接: <a href="https://pan.baidu.com/s/1AgKxJC9qGmQmujG4lxVKhg" target="_blank" rel="noopener">https://pan.baidu.com/s/1AgKxJC9qGmQmujG4lxVKhg</a><br>提取码: yptm</p></blockquote><p>下载好为 <code>Tampermonkey_v4.5.crx</code></p><ol><li>将后缀改为rar压缩文件，然后解压该文件为文件夹<blockquote><p>接着在谷歌浏览器Chrome里打开右上角的<code>三个竖点</code><br>再点击<code>更多工具</code><br>点击<code>扩展程序</code><br><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191209175830516.png" class="lazyload"></p></blockquote></li><li>打开<code>开发者模式</code>，点击<code>加载已解压的扩展程序</code><br><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191209180510480.png" class="lazyload"></li><li>选择刚才解压后的文件夹 <code>Tampermonkey_v4.5</code><br><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191209180747460.png" class="lazyload"><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><blockquote><p> 脚本下载地址: <a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">https://greasyfork.org/zh-CN</a><br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191209181143719.png" class="lazyload"></p></blockquote></li></ol><p>然后就可以去搜索自己想用的插件了</p>]]></content>
      
      
      <categories>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> Tampermonkey </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>找出数组中重复的数字</title>
      <link href="/2019/12/02/%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/"/>
      <url>/2019/12/02/%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="找出数组中重复的数字"><a href="#找出数组中重复的数字" class="headerlink" title="找出数组中重复的数字"></a>找出数组中重复的数字</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个长度为 n 的整数数组 <code>nums</code>，数组中所有的数字都在 0∼n−1 的范围内。</p><p>数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。</p><p>请找出数组中任意一个重复的数字。</p><blockquote><p><strong>注意</strong>：如果某些数字不在 0∼n−1 的范围内，或数组中不包含重复数字，则返回 -1；</p></blockquote><h5 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定 nums = [2, 3, 5, 4, 3, 2, 6, 7]。</span><br><span class="line"></span><br><span class="line">返回 2 或 3。</span><br></pre></td></tr></table></figure><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>首先确定数组里的数字是在给定范围内，否则返回-1</p><p>然后将所有元素从首位元素开始，将其放到对应号数的位置上</p><p>反复循环，一直将首位元素</p><p>例如一个数组：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> num[<span class="number">5</span>]=&#123;<span class="number">2</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://i.loli.net/2019/12/05/pBPf8XSRenNKTA1.png" class="lazyload"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 算法 </tag>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>煤球堆叠问题</title>
      <link href="/2019/12/01/%E7%85%A4%E7%90%83%E5%A0%86%E5%8F%A0%E9%97%AE%E9%A2%98/"/>
      <url>/2019/12/01/%E7%85%A4%E7%90%83%E5%A0%86%E5%8F%A0%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="煤球堆叠问题"><a href="#煤球堆叠问题" class="headerlink" title="煤球堆叠问题"></a>煤球堆叠问题</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>煤球数目</p><p>有一堆煤球，堆成三角棱锥形。具体：<br>第一层放1个，<br>第二层3个（排列成三角形），<br>第三层6个（排列成三角形），<br>第四层10个（排列成三角形），<br>….<br>如果一共有100层，共有多少个煤球？</p></blockquote><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p><img alt data-src="https://s2.ax1x.com/2019/12/01/QmFmNR.md.png" class="lazyload"></p><p>这里第一层有一颗煤球，第二层放了三颗，第三层放了六颗，其实到这里可以看出每次是扩展了一个三角形的一边。<br>通俗一点讲，第2层加两颗，第3层加三颗，第四层加4颗……第100层就得加100颗</p><p>那么</p><blockquote><p>第一层：1</p><p>第二层：1+2</p><p>第三层：1+2+3</p><p>第四层：1+2+3+4</p><p>…</p><p>第100层：1+2+3+4+…+99+100</p></blockquote><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ceng=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">    ceng+=i;<span class="comment">//统计每层的个数</span></span><br><span class="line">        sum+=ceng;<span class="comment">//上层加上这层个数 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">171700</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>煤球问题就像是杨辉三角结构一样，不过不同的是他是一个层级关系，堆叠成了一个正三角体(可能这里没有图形比较抽象)，然后将每一层都进行的一个叠加。</p><p>此处应注意每一层的煤球的变化，也同时不能忘记将所有层的煤球进行一个累加</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 算法 </tag>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>灵格斯词库安装教程</title>
      <link href="/2019/11/26/english/"/>
      <url>/2019/11/26/english/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="灵格斯【词典21部】安装教程"><a href="#灵格斯【词典21部】安装教程" class="headerlink" title="灵格斯【词典21部】安装教程"></a>灵格斯【词典21部】安装教程</h1><h2 id="解压资源包"><a href="#解压资源包" class="headerlink" title="解压资源包"></a>解压资源包</h2><p> <img alt data-src="https://ftp.bmp.ovh/imgs/2019/11/4fae222ef7a13a22.png" class="lazyload"> </p><h2 id="进入文件目录"><a href="#进入文件目录" class="headerlink" title="进入文件目录"></a>进入文件目录</h2><blockquote><p>解压后文件</p></blockquote><p> <img alt data-src="https://ftp.bmp.ovh/imgs/2019/11/6fcb51ae1df4c6ae.png" class="lazyload"> </p><blockquote><p>点击进入目录，打开标记文件</p></blockquote><p> <img alt data-src="https://ftp.bmp.ovh/imgs/2019/11/0aba2c28e4108f75.png" class="lazyload"> </p><h2 id="打开程序"><a href="#打开程序" class="headerlink" title="打开程序"></a>打开程序</h2><blockquote><p>打开后如下界面</p></blockquote><p> <img alt data-src="https://ftp.bmp.ovh/imgs/2019/11/44e2442f715a276d.png" class="lazyload"> </p><blockquote><p>各功能模块</p></blockquote><p> <img alt data-src="https://ftp.bmp.ovh/imgs/2019/11/a6e9748a986c1030.png" class="lazyload"> </p><h2 id="附件目录工具"><a href="#附件目录工具" class="headerlink" title="附件目录工具"></a>附件目录工具</h2><blockquote><p>有的工具可以使用，按所需</p></blockquote><p><img alt data-src="https://s2.ax1x.com/2019/11/26/QSsy0P.png" class="lazyload"></p><h2 id="取词"><a href="#取词" class="headerlink" title="取词"></a>取词</h2><p>可以通过此开关，将鼠标指向单词，200ms后将会翻译得出该单词释义(<code>不同词典翻译不同</code>)</p><blockquote><p>取词开</p></blockquote><p> <img alt data-src="https://ftp.bmp.ovh/imgs/2019/11/0573c7c35a07aad8.png" class="lazyload"> </p><blockquote><p>取词关</p></blockquote><p> <img alt data-src="https://ftp.bmp.ovh/imgs/2019/11/8b5be7ee17723683.png" class="lazyload"> </p><blockquote><p>取词结果</p></blockquote><p> <img alt data-src="https://ftp.bmp.ovh/imgs/2019/11/1ecf33e250fed77f.png" class="lazyload"> </p><blockquote><p>好了，快体验词典飞一般的快乐吧！！！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
            <tag> 词典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微生物增殖问题</title>
      <link href="/2019/11/26/%E5%BE%AE%E7%94%9F%E7%89%A9%E5%A2%9E%E6%AE%96%E9%97%AE%E9%A2%98/"/>
      <url>/2019/11/26/%E5%BE%AE%E7%94%9F%E7%89%A9%E5%A2%9E%E6%AE%96%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="微生物增殖"><a href="#微生物增殖" class="headerlink" title="微生物增殖"></a>微生物增殖</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>假设有两种微生物 X 和 Y<br>X出生后每隔3分钟分裂一次（数目加倍），Y出生后每隔2分钟分裂一次（数目加倍）<br>一个新出生的X，半分钟之后吃掉1个Y，并且，从此开始，每隔1分钟吃1个Y。<br>现在已知有新出生的  X=10，Y=90，求60分钟后Y的数目。</p></blockquote><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>此处将<code>半分钟（0.5min）</code>转换成<code>一个0.5秒</code>。</p><p><code>一分钟</code>就是<code>2个0.5秒</code>，<code>二分钟</code>就是<code>4个0.5秒</code>，<code>三分钟</code>就是<code>6个0.5秒</code>，<code>60分钟</code>即为<code>120个0.5秒</code></p><table><thead><tr><th align="center">time</th><th align="center">m个0.5秒</th><th align="center">x</th><th align="center">y</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0</td><td align="center">10</td><td align="center">90</td></tr><tr><td align="center">0.5</td><td align="center">1</td><td align="center">10</td><td align="center">90-10=80</td></tr><tr><td align="center">1</td><td align="center">2</td><td align="center">10</td><td align="center">80</td></tr><tr><td align="center">1.5</td><td align="center">3</td><td align="center">10</td><td align="center">80-10=70</td></tr><tr><td align="center">2</td><td align="center">4</td><td align="center">10</td><td align="center">70*2=140</td></tr><tr><td align="center">2.5</td><td align="center">5</td><td align="center">10</td><td align="center">140-10=130</td></tr><tr><td align="center">3</td><td align="center">6</td><td align="center">10*2=20</td><td align="center">130</td></tr><tr><td align="center">3.5</td><td align="center">7</td><td align="center">20</td><td align="center">130-20=110</td></tr><tr><td align="center">4</td><td align="center">8</td><td align="center">20</td><td align="center">110*2=220</td></tr><tr><td align="center">……</td><td align="center">……</td><td align="center">……</td><td align="center">……</td></tr></tbody></table><p>此处即出现在</p><ul><li>2取余为1时，吃一次Y</li><li>4取余为0时，Y分裂一次</li><li>6取余为0时，X分裂一次</li></ul><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><blockquote><p>代码</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> x=<span class="number">10</span>,y=<span class="number">90</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">120</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(y&lt;=<span class="number">0</span>)&#123;<span class="comment">//如果y被吃完了，将不能再吃</span></span><br><span class="line">            y=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>)<span class="comment">//y被吃条件</span></span><br><span class="line">            y-=x;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">4</span>==<span class="number">0</span>)<span class="comment">//y分裂条件</span></span><br><span class="line">            y*=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">6</span>==<span class="number">0</span>)<span class="comment">//x分裂条件</span></span><br><span class="line">            x*=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"60min后，y生物有%d个\n"</span>,y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><blockquote><p>60min后，y生物有<code>94371840</code>个</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>这道题要考虑到x、y的动态变化，此处的半分钟为0.5s要注意进行一个转换，那么可以将60分钟转换为120个0.5秒，也随之将循环次数由60次转换成120次，将0.5成功转换成了1整数，也就解决了整数之间小数的问题</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 算法 </tag>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly更新部署</title>
      <link href="/2019/11/19/Butterfly-Update/"/>
      <url>/2019/11/19/Butterfly-Update/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Butterfly更新部署"><a href="#Butterfly更新部署" class="headerlink" title="Butterfly更新部署"></a>Butterfly更新部署</h1><blockquote><p>随<a href="https://jerryc.me/posts/21cfbf15" target="_blank" rel="noopener">作者</a>更新以后，在该博客进行了一些同步更新</p></blockquote><h2 id="配置butterfly文件"><a href="#配置butterfly文件" class="headerlink" title="配置butterfly文件"></a>配置butterfly文件</h2><p>将<code>theme/Butterfly</code>下的<code>config.yml</code>复制到<code>sourse/_data</code>下的<code>butterfly.yml</code>文件里，c此后就可以直接配置<code>butterfly</code>可以了，它会替代( <em><code>注：不是替换，通俗讲配置butterfly就有用就可以了</code></em>)</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="增加友情链接"><a href="#增加友情链接" class="headerlink" title="增加友情链接"></a>增加友情链接</h3><ul><li>创建友情链接</li></ul><blockquote><p>在 Hexo 博客的根目录<br>输入 <code>hexo new page link</code><br>你会找到<code>source/link/index.md</code>这个文件</p></blockquote><ul><li>修改文件：</li></ul><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2019-11-19 08:29:29</span><br><span class="line">type: "link"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>友情链接添加</li></ul><p>在Hexo博客目录中的<code>source/_data</code>，创建一个文件<code>link.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">class:</span></span><br><span class="line"><span class="attr">  class_name:</span> <span class="string">友情链接</span></span><br><span class="line"><span class="attr">  link_list:</span></span><br><span class="line">    <span class="number">1</span><span class="string">:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">      link:</span> <span class="attr">https://blog.xxx.com</span></span><br><span class="line"><span class="attr">      avatar:</span> <span class="attr">https://profile.csdnimg.cn/8/3/C/1_qq_38496329</span></span><br><span class="line"><span class="attr">      descr:</span> <span class="string">xxxxxxx</span></span><br><span class="line">    <span class="number">2</span><span class="string">:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">xxxxxx</span></span><br><span class="line"><span class="attr">      link:</span> <span class="attr">https://www.xxxxxxcn/</span></span><br><span class="line"><span class="attr">      avatar:</span> <span class="attr">https://xxxxx/avatar.png</span></span><br><span class="line"><span class="attr">      descr:</span> <span class="string">xxxxxxx</span>  </span><br><span class="line"></span><br><span class="line"><span class="attr">class2:</span></span><br><span class="line"><span class="attr">   class_name:</span> <span class="string">链接无效</span></span><br><span class="line"><span class="attr">   link_list:</span></span><br><span class="line">     <span class="number">1</span><span class="string">:</span></span><br><span class="line"><span class="attr">       name:</span> <span class="string">梦xxx</span></span><br><span class="line"><span class="attr">       link:</span> <span class="attr">https://blog.xxx.com</span></span><br><span class="line"><span class="attr">       avatar:</span> <span class="attr">https://xxxx/avatar.png</span></span><br><span class="line"><span class="attr">       descr:</span> <span class="string">xxxx</span></span><br><span class="line">     <span class="number">2</span><span class="string">:</span></span><br><span class="line"><span class="attr">       name:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">       link:</span> <span class="attr">https://www.axxxx.cn/</span></span><br><span class="line"><span class="attr">       avatar:</span> <span class="attr">https://x</span></span><br><span class="line"><span class="attr">       descr:</span> <span class="string">xx</span></span><br></pre></td></tr></table></figure><ul><li>友情链接界面设置</li></ul><blockquote><p>需要添加友情链接，可以在butterfly.yml配置<br>可在友情链接上写上自己的个人资料，方便其他人添加。</p></blockquote><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">Flink:</span></span><br><span class="line"><span class="attr">  headline:</span> <span class="string">友情链接</span></span><br><span class="line"><span class="attr">  info_headline:</span> <span class="string">我的Blog资料</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">Blog</span> <span class="string">名字：</span> <span class="string">XJC&amp;BLOG</span></span><br><span class="line"><span class="attr">  address:</span> <span class="string">Blog</span> <span class="string">地址：</span> <span class="attr">https://xjc5772.github.io/</span></span><br><span class="line"><span class="attr">  avatar:</span> <span class="string">Blog</span> <span class="string">头像：</span> <span class="attr">https://profile.csdnimg.cn/8/3/C/1_qq_38496329</span></span><br><span class="line"><span class="attr">  info:</span> <span class="string">Blog</span> <span class="string">简介：</span> <span class="string">多学一点，没什么不好的</span></span><br><span class="line"><span class="attr">  comment:</span> <span class="string">如果需要交换友链,请留言</span></span><br></pre></td></tr></table></figure><h3 id="代码复制功能"><a href="#代码复制功能" class="headerlink" title="代码复制功能"></a>代码复制功能</h3><p>主题支持代码复制功能</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight_copy:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img alt="代码复制" data-src="https://ftp.bmp.ovh/imgs/2019/11/8cb4589a51ede654.png" class="lazyload"></p><h3 id="代码框展开-关闭"><a href="#代码框展开-关闭" class="headerlink" title="代码框展开/关闭"></a>代码框展开/关闭</h3><p>配置<code>butterfly.yml</code></p><p>在默认情况下，代码框自动展开，可设置是否所有代码框都关闭状态，点击标记处可展开代码</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight_shrink:</span> <span class="literal">true</span> <span class="comment">#代码框不展开，需点击 '&gt;' 打开</span></span><br></pre></td></tr></table></figure><h4 id="代码框关闭"><a href="#代码框关闭" class="headerlink" title="代码框关闭"></a>代码框关闭</h4><p><code>highlight_shrink: true</code> <img alt="代码框关闭" data-src="https://ftp.bmp.ovh/imgs/2019/11/53365a2bdcbecb5f.png" class="lazyload"> </p><h4 id="代码框展开"><a href="#代码框展开" class="headerlink" title="代码框展开"></a>代码框展开</h4><p><code>highlight_shrink: false</code> <img alt="代码框展开" data-src="https://ftp.bmp.ovh/imgs/2019/11/443ef181d67a01d3.png" class="lazyload"> </p><h3 id="代码换行"><a href="#代码换行" class="headerlink" title="代码换行"></a>代码换行</h3><p>在默认情况下，<code>hexo-highlight</code>在编译的时候不会实现代码自动换行。如果你不希望在代码块的区域里有横向滚动条的话，那么你可以考虑开启这个功能。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">code_word_wrap:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后找到你站点的 Hexo 配置文件<code>_config.yml</code>，将<code>line_number</code>改成<code>false</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  tab_replace:</span></span><br></pre></td></tr></table></figure><blockquote><p>设置code_word_wrap之前(没有那么长的图，借用作者的):</p></blockquote><h4 id="代码换行前"><a href="#代码换行前" class="headerlink" title="代码换行前"></a>代码换行前</h4><p><img alt="代码换行前" data-src="https://ftp.bmp.ovh/imgs/2019/11/ea5572c6e0bc3fb7.png" class="lazyload"> </p><blockquote><p>设置code_word_wrap之后(同上):blonde_woman:</p></blockquote><h4 id="代码换行后"><a href="#代码换行后" class="headerlink" title="代码换行后"></a>代码换行后<img alt="代码换行后" data-src="https://ftp.bmp.ovh/imgs/2019/11/766c6df7661395c3.png" class="lazyload"></h4><h2 id="社交图标"><a href="#社交图标" class="headerlink" title="社交图标"></a>社交图标</h2><p><code>Butterfly</code>支持 <a href="https://fontawesome.com/v4.7.0/" target="_blank" rel="noopener"><code>font-awesome v4</code></a>和 <a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener"><code>font-awesome v5</code></a>. 如需开启<code>font-awesome v5</code>,需要在<code>butterfly.yml</code>上开启</p><blockquote><p>此处我用的<a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener"><code>font-awesome v5</code></a></p><p>配置<code>butterfly.yml</code></p></blockquote><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">CDN_USE:</span></span><br><span class="line"><span class="attr">  css:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">/css/index.css</span></span><br><span class="line"><span class="attr">    - https:</span><span class="string">//cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css</span></span><br><span class="line"><span class="attr">    - https:</span><span class="string">//use.fontawesome.com/releases/v5.8.1/css/all.css</span> <span class="comment">#fontawesomeV5_css</span></span><br></pre></td></tr></table></figure><blockquote><p>无论V4还是V5,书写格式都是一样的图标名：url</p></blockquote><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="string">fa</span> <span class="attr">fa-github:</span> <span class="attr">https://github.com/jerryc127</span></span><br><span class="line">  <span class="string">fa</span> <span class="attr">fa-rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure><h2 id="主页文章节选-自动节选和文章页description"><a href="#主页文章节选-自动节选和文章页description" class="headerlink" title="主页文章节选(自动节选和文章页description)"></a>主页文章节选(自动节选和文章页description)</h2><blockquote><p>此处额外谈一点，重新认识了一篇文章的那么多属性，下面我将逐一认识</p></blockquote><hr><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">layout:</span> <span class="string">hexo</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo文章的发布</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="bullet">-10</span><span class="bullet">-28</span> <span class="number">20</span><span class="string">:37:17</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Hexo</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">异常处理</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">'Hexo,异常处理'</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">对Hexo博客搭建的一些简单记录，已经对一些坑进行填埋</span></span><br><span class="line"><span class="attr">abbrlink:</span> <span class="number">46</span><span class="string">be9372</span></span><br><span class="line"><span class="attr">cover:</span> <span class="attr">https://source.unsplash.com/collection/collectionid/1600x900</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="attr">https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture</span></span><br></pre></td></tr></table></figure><h3 id="文章标题：title"><a href="#文章标题：title" class="headerlink" title="文章标题：title"></a>文章标题：title</h3><blockquote><p>title: Hexo文章的发布</p></blockquote><h3 id="创建时间：date"><a href="#创建时间：date" class="headerlink" title="创建时间：date"></a>创建时间：date</h3><blockquote><p>date: 2019-10-28 20:37:17</p></blockquote><h3 id="创建分类：categories"><a href="#创建分类：categories" class="headerlink" title="创建分类：categories"></a>创建分类：categories</h3><blockquote><p>categories: Hexo</p></blockquote><p> <img alt="title,date,categories" data-src="https://ftp.bmp.ovh/imgs/2019/11/ff77f655f8481d14.png" class="lazyload"> </p><h3 id="创建标签：tags"><a href="#创建标签：tags" class="headerlink" title="创建标签：tags"></a>创建标签：tags</h3><blockquote><p>tags:</p><p>​    - Hexo</p><p>​    - 异常处理</p></blockquote><p> <img alt="tags" data-src="https://ftp.bmp.ovh/imgs/2019/11/5a25aab39c889f60.png" class="lazyload"> </p><h3 id="创建描述：description"><a href="#创建描述：description" class="headerlink" title="创建描述：description"></a>创建描述：description</h3><p>因为主题UI的关系，主页文章节选只支持自动节选和文章页<code>description</code>。优先选择自动节选。</p><p>在<code>butterfly.yml</code>里可以开启<code>auto_excerpt</code>的选项，你的文章将会在自动截取部分显示在主页。（默认显示150个字）。</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure><p>如果没有开启自动节选，则会显示文章页<code>front-matter</code>里面设置的<code>description</code>。</p><p> <img alt="description" data-src="https://ftp.bmp.ovh/imgs/2019/11/baed3dcf3dad3eba.png" class="lazyload"> </p><p>我是将<code>自动节选</code>给关闭了的，就会显示我的<code>description</code>里的内容</p><p><img alt="description" data-src="https://ftp.bmp.ovh/imgs/2019/11/b621387b673c216a.png" class="lazyload"> </p><h3 id="创建封面图：cover"><a href="#创建封面图：cover" class="headerlink" title="创建封面图：cover"></a>创建封面图：cover</h3><h4 id="默认文章封面"><a href="#默认文章封面" class="headerlink" title="默认文章封面"></a>默认文章封面</h4><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">default_cover:</span> <span class="attr">https://xxx.png</span> <span class="comment">#默认图片地址</span></span><br></pre></td></tr></table></figure><blockquote><p>如果不配置cover,可以设置显示默认的cover</p></blockquote><h4 id="自定义文章封面"><a href="#自定义文章封面" class="headerlink" title="自定义文章封面"></a>自定义文章封面</h4><p>配置<code>文章.md</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">cover:</span> <span class="attr">https://images.unsplash.com/photo-1572557347335-f6e9500ede25?crop=entropy&amp;cs=tinysrgb&amp;fit=crop&amp;fm=jpg&amp;h=900&amp;ixid=eyJhcHBfaWQiOjF9&amp;ixlib=rb-1.2.1&amp;q=80&amp;w=1600</span></span><br></pre></td></tr></table></figure><p><img alt="cover自定义" data-src="https://i.loli.net/2019/11/19/NxPHtLhIDkWQi7v.png" class="lazyload"></p><h4 id="配置page主页图"><a href="#配置page主页图" class="headerlink" title="配置page主页图"></a>配置page主页图</h4><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">default_top_img:</span> <span class="attr">https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture</span></span><br></pre></td></tr></table></figure><blockquote><p>此处使用了随机图片，作为首页图，每次进入将会不一样</p><p>当顶部图留空，true和false<br>主页会显示纯颜色的顶部图</p><p>其他page的顶部图没有设置时，也会显示纯颜色的顶部</p></blockquote><p><img alt="page随机图0" data-src="https://i.loli.net/2019/11/19/CA6OXrysvQG7n2V.png" class="lazyload"></p><p><img alt="page随机图1" data-src="https://i.loli.net/2019/11/19/IRX5nZhFUp9zw6B.png" class="lazyload"></p><h4 id="配置顶部图"><a href="#配置顶部图" class="headerlink" title="配置顶部图"></a>配置顶部图</h4><h4 id="配置文章顶部图"><a href="#配置文章顶部图" class="headerlink" title="配置文章顶部图"></a>配置文章顶部图</h4><p>配置<code>文章.md</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">top_img:</span> <span class="attr">https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture</span></span><br></pre></td></tr></table></figure><p><img alt="top_img自定义" data-src="https://i.loli.net/2019/11/19/6mubcqTKBREhNd4.png" class="lazyload"></p><h4 id="配置archive顶部图"><a href="#配置archive顶部图" class="headerlink" title="配置archive顶部图"></a>配置archive顶部图</h4><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">archive_img:</span> <span class="attr">https://i.loli.net/2019/11/19/XlPxSY2O9NUDvjf.jpg</span></span><br></pre></td></tr></table></figure><h4 id="配置tag顶部图"><a href="#配置tag顶部图" class="headerlink" title="配置tag顶部图"></a>配置tag顶部图</h4><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tag_img:</span> <span class="attr">https://i.loli.net/2019/11/19/XlPxSY2O9NUDvjf.jpg</span></span><br></pre></td></tr></table></figure><h4 id="配置category顶部图"><a href="#配置category顶部图" class="headerlink" title="配置category顶部图"></a>配置category顶部图</h4><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">category_img:</span> <span class="attr">https://i.loli.net/2019/11/19/XlPxSY2O9NUDvjf.jpg</span></span><br></pre></td></tr></table></figure><h3 id="配置文章相关信息"><a href="#配置文章相关信息" class="headerlink" title="配置文章相关信息"></a>配置文章相关信息</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_meta:</span></span><br><span class="line"><span class="attr">  date_type:</span> <span class="string">both</span> <span class="comment"># or created or updated 文章日期是创建日或者更新日或都显示</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="literal">true</span> <span class="comment"># or false 是否显示分类</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="literal">true</span> <span class="comment"># or false 是否显示标签</span></span><br></pre></td></tr></table></figure><h3 id="配置悬赏"><a href="#配置悬赏" class="headerlink" title="配置悬赏"></a>配置悬赏</h3><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">reward:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  QR_code:</span></span><br><span class="line"><span class="attr">    - itemlist:</span></span><br><span class="line"><span class="attr">        img:</span> <span class="string">/img/wechat.jpg</span></span><br><span class="line"><span class="attr">        text:</span> <span class="string">微信</span></span><br><span class="line"><span class="attr">    - itemlist:</span></span><br><span class="line"><span class="attr">        img:</span> <span class="string">/img/alipay.jpg</span></span><br><span class="line"><span class="attr">        text:</span> <span class="string">支付宝</span></span><br></pre></td></tr></table></figure><h3 id="配置头像"><a href="#配置头像" class="headerlink" title="配置头像"></a>配置头像</h3><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span> <span class="attr">https://i.loli.net/2019/11/19/y9F2N5EaYASTzvR.jpg</span></span><br></pre></td></tr></table></figure><p><img alt="avatar头像" data-src="https://i.loli.net/2019/11/19/8hRXAJO4UFy1pNW.png" class="lazyload"></p><h3 id="配置相关文章"><a href="#配置相关文章" class="headerlink" title="配置相关文章"></a>配置相关文章</h3><p>相关文章推荐的原理是根据文章tags的比重来推荐</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">related_post:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">3</span> <span class="comment"># 显示推荐文章数目</span></span><br></pre></td></tr></table></figure><p><img alt="相关文章" data-src="https://i.loli.net/2019/11/19/hyQIFO5M1LZbNEY.png" class="lazyload"></p><h3 id="配置运行时间"><a href="#配置运行时间" class="headerlink" title="配置运行时间"></a>配置运行时间</h3><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">runtimeshow:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  start_date:</span> <span class="number">10</span><span class="string">/21/2019</span> <span class="number">00</span><span class="string">:00:00</span></span><br><span class="line">  <span class="comment">##网页开通时间</span></span><br><span class="line">  <span class="comment">#格式: 月/日/年 时间</span></span><br><span class="line">  <span class="comment">#也可以写成 年/月/日 时间</span></span><br></pre></td></tr></table></figure><h3 id="配置评论-Valine"><a href="#配置评论-Valine" class="headerlink" title="配置评论(Valine)"></a>配置评论(Valine)</h3><p>配置<code>butterfly.yml</code></p><p>此处先到<a href="https://valine.js.org/quickstart.html" target="_blank" rel="noopener">Valine</a>登录后创建应用，获取<code>appID</code>与<code>appkey</code>，参考官方文档，将其复制到<code>appId</code>与<code>appKey</code>处，修改<code>enable</code>为<code>true</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span> <span class="comment"># if you want use valine,please set this value is true</span></span><br><span class="line"><span class="attr">  appId:</span> <span class="string">zeWPXXXXXXXXXXXXXXXXXXXXXXXoHsz</span> <span class="comment"># leancloud application app id</span></span><br><span class="line"><span class="attr">  appKey:</span> <span class="string">EpwGoXXXXXXXXXXXXXXXXNWRpW2V</span> <span class="comment"># leancloud application app key</span></span><br><span class="line"><span class="attr">  notify:</span> <span class="literal">false</span> <span class="comment"># valine mail notify (true/false) </span></span><br><span class="line"><span class="attr">  verify:</span> <span class="literal">false</span> <span class="comment"># valine verify code (true/false)</span></span><br><span class="line"><span class="attr">  pageSize:</span> <span class="number">7</span> <span class="comment"># comment list page size</span></span><br><span class="line"><span class="attr">  avatar:</span> <span class="string">monsterid</span> <span class="comment"># gravatar style https://valine.js.org/#/avatar</span></span><br><span class="line"><span class="attr">  lang:</span> <span class="string">zh-cn</span> <span class="comment"># i18n: zh-cn/en</span></span><br><span class="line"><span class="attr">  placeholder:</span> <span class="string">Please</span> <span class="string">leave</span> <span class="string">your</span> <span class="string">footprints</span> <span class="comment"># 预输入</span></span><br><span class="line"><span class="attr">  guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment">#valine comment header info</span></span><br><span class="line"><span class="attr">  bg:</span> <span class="string">/img/comment_bg.png</span> <span class="comment"># valine background</span></span><br></pre></td></tr></table></figure><blockquote><p>官方文档中还有头像配置与邮箱提醒等配置，这里不做更多的详解，可以自己到<a href="https://valine.js.org/notify.html" target="_blank" rel="noopener">Valine官网</a>去查看</p></blockquote><h3 id="配置搜索"><a href="#配置搜索" class="headerlink" title="配置搜索"></a>配置搜索</h3><h4 id="配置本地搜索"><a href="#配置本地搜索" class="headerlink" title="配置本地搜索"></a>配置本地搜索</h4><p>首先需要安装 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a>. 根据它的文档去做相应配置。注意格式只支持 xml </p><p>安装<code>hexo-generator-search</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line"><span class="attr">    hits_empty:</span> <span class="string">"We didn't find any results for the search: $&#123;query&#125;"</span> <span class="comment"># if there are no result</span></span><br></pre></td></tr></table></figure><p> <img alt data-src="https://ftp.bmp.ovh/imgs/2019/11/45ab9dcf0c05da63.png" class="lazyload"> </p><h3 id="UI特效页面配置"><a href="#UI特效页面配置" class="headerlink" title="UI特效页面配置"></a>UI特效页面配置</h3><p>配置<code>butterfly.yml</code></p><h4 id="配置主题色"><a href="#配置主题色" class="headerlink" title="配置主题色"></a>配置主题色</h4><blockquote><p>颜色值必须被双引号包裹，就像”#000”而不是#000。否则将会在构建的时候报错！</p></blockquote><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme_color:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  main:</span> <span class="string">"#9370DB"</span></span><br><span class="line"><span class="attr">  paginator:</span> <span class="string">"#7A7FF1"</span></span><br><span class="line"><span class="attr">  button_hover:</span> <span class="string">"#FF7242"</span></span><br><span class="line"><span class="attr">  text_selection:</span> <span class="string">"#69c46d"</span></span><br><span class="line"><span class="attr">  link_color:</span> <span class="string">"#858585"</span></span><br><span class="line"><span class="attr">  hr_color:</span> <span class="string">"#A4D8FA"</span></span><br><span class="line"><span class="attr">  read-mode-bg_color:</span> <span class="string">'#FAF9DE'</span></span><br></pre></td></tr></table></figure><h4 id="配置背景"><a href="#配置背景" class="headerlink" title="配置背景"></a>配置背景</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 图片格式 background: url(http://xxxxxx.com/xxx.jpg)</span></span><br><span class="line"><span class="comment"># 顔色 background: '#49B202'</span></span><br><span class="line"><span class="comment"># 留空 显示白色</span></span><br><span class="line"><span class="attr">background:</span> <span class="comment">#此处可以是背景色，也可以是图片路径</span></span><br></pre></td></tr></table></figure><h4 id="配置footer"><a href="#配置footer" class="headerlink" title="配置footer"></a>配置footer</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># footer是否显示图片背景(与top_img一致)</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="配置打字效果"><a href="#配置打字效果" class="headerlink" title="配置打字效果"></a>配置打字效果</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打字效果</span></span><br><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="配置背景彩带"><a href="#配置背景彩带" class="headerlink" title="配置背景彩带"></a>配置背景彩带</h4><h5 id="静态彩带"><a href="#静态彩带" class="headerlink" title="静态彩带"></a>静态彩带</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  size:</span> <span class="number">150</span></span><br><span class="line"><span class="attr">  alpha:</span> <span class="number">0.6</span></span><br><span class="line"><span class="attr">  zIndex:</span> <span class="bullet">-1</span></span><br><span class="line"><span class="attr">  click_to_change:</span> <span class="literal">false</span>  <span class="comment">#设置是否每次点击都更换彩带</span></span><br><span class="line"><span class="attr">  mobile:</span> <span class="literal">false</span> <span class="comment"># false 手机端不显示 true 手机端显示</span></span><br></pre></td></tr></table></figure><h5 id="动态彩带"><a href="#动态彩带" class="headerlink" title="动态彩带"></a>动态彩带</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_ribbon_piao:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  mobile:</span> <span class="literal">false</span> <span class="comment"># false 手机端不显示 true 手机端显示</span></span><br></pre></td></tr></table></figure><h4 id="配置背景nest"><a href="#配置背景nest" class="headerlink" title="配置背景nest"></a>配置背景nest</h4><blockquote><p>canvas-nest</p></blockquote><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  color:</span> <span class="string">'0,0,255'</span> <span class="comment">#color of lines, default: '0,0,0'; RGB values: (R,G,B).(note: use ',' to separate.)</span></span><br><span class="line"><span class="attr">  opacity:</span> <span class="number">0.7</span> <span class="comment"># the opacity of line (0~1), default: 0.5.</span></span><br><span class="line"><span class="attr">  zIndex:</span> <span class="bullet">-1</span> <span class="comment"># z-index property of the background, default: -1.</span></span><br><span class="line"><span class="attr">  count:</span> <span class="number">99</span> <span class="comment"># the number of lines, default: 99.</span></span><br><span class="line"><span class="attr">  mobile:</span> <span class="literal">true</span> <span class="comment"># false 手机端不显示 true 手机端显示</span></span><br></pre></td></tr></table></figure><h4 id="配置点击效果"><a href="#配置点击效果" class="headerlink" title="配置点击效果"></a>配置点击效果</h4><h5 id="爆炸泡泡"><a href="#爆炸泡泡" class="headerlink" title="爆炸泡泡"></a>爆炸泡泡</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fireworks:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h5 id="爱心"><a href="#爱心" class="headerlink" title="爱心"></a>爱心</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 点击出现爱心</span></span><br><span class="line"><span class="attr">click_heart:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h5 id="富强民主"><a href="#富强民主" class="headerlink" title="富强民主"></a>富强民主</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 点击出现文字，文字可自行修改</span></span><br><span class="line"><span class="attr">ClickShowText:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  text:</span> </span><br><span class="line"><span class="bullet">    -</span> <span class="string">富强</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">民主</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">文明</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">和谐</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">自由</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">平等</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">公正</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">法治</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">爱国</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">敬业</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">诚信</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">友善</span></span><br><span class="line"><span class="attr">  fontSize:</span> <span class="number">15</span><span class="string">px</span></span><br></pre></td></tr></table></figure><h4 id="网站副标题"><a href="#网站副标题" class="headerlink" title="网站副标题"></a>网站副标题</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 主页subtitle</span></span><br><span class="line"><span class="comment"># 打字效果</span></span><br><span class="line"><span class="attr">subtitle:</span> </span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source调用第三方服务</span></span><br><span class="line">  <span class="comment"># source: false 关闭调用 </span></span><br><span class="line">  <span class="comment"># source: 1  调用金山词霸的每日一句（简体）</span></span><br><span class="line">  <span class="comment"># source: 2  调用一言网的一句话（简体） #https://hitokoto.cn/</span></span><br><span class="line">  <span class="comment"># source: 3  调用一句网（简体） http://yijuzhan.com/</span></span><br><span class="line">  <span class="comment"># source: 4  调用今日诗词（简体） https://www.jinrishici.com/</span></span><br><span class="line">  <span class="comment"># subtitle 会先显示 source , 再显示 sub 的内容</span></span><br><span class="line"><span class="attr">  source:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># (如果有英文逗号' , '，请使用转义字符 &amp;#44;)</span></span><br><span class="line"><span class="attr">  sub:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">共眠一舸听秋雨&amp;#44;小簟轻衾各自寒</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">Sleep</span> <span class="string">together</span> <span class="string">and</span> <span class="string">listen</span> <span class="string">to</span> <span class="string">the</span> <span class="string">autumn</span> <span class="string">rain</span></span><br></pre></td></tr></table></figure><h4 id="配置字数统计"><a href="#配置字数统计" class="headerlink" title="配置字数统计"></a>配置字数统计</h4><blockquote><p>安装配置</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>配置<code>butterfly.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">wordcount:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="配置-Snackbar-弹窗"><a href="#配置-Snackbar-弹窗" class="headerlink" title="配置 Snackbar 弹窗"></a>配置 Snackbar 弹窗</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Snackbar 彈窗</span></span><br><span class="line"><span class="comment"># https://github.com/polonel/SnackBar</span></span><br><span class="line"><span class="comment"># position 彈窗位置</span></span><br><span class="line"><span class="comment"># 可選 top-left / top-center / top-right / bottom-left / bottom-center / bottom-right</span></span><br><span class="line"><span class="attr">snackbar:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  position:</span> <span class="string">bottom-left</span></span><br><span class="line"><span class="attr">  bg_light:</span> <span class="string">'#49b1f5'</span> <span class="comment">#light mode時彈窗背景</span></span><br><span class="line"><span class="attr">  bg_dark:</span> <span class="string">'#2d3035'</span> <span class="comment">#dark mode時彈窗背景</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Hexo主题 </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/2019/10/29/MarkdownGrammar/"/>
      <url>/2019/10/29/MarkdownGrammar/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a>Markdown基本语法</h1><h2 id="0-特殊字符"><a href="#0-特殊字符" class="headerlink" title="(0) 特殊字符"></a>(0) 特殊字符</h2><p>Markdown对特殊字符处理不是很友好,很容易出现很奇怪的异常,其实就是因为文章中包含了特殊字符无法编译通过导致Hexo无法渲染<br>在写博客时,一定注意不要写这些字符,如果要写,就进行转义<br>有些人可能说可以使用反斜杠 \ 来处理,我这里不建议,因为我使用的时候没有解决问题。<br>下面是比较常见的几个:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">! &amp;<span class="comment">#33; — 惊叹号Exclamation mark </span></span><br><span class="line">” &amp;<span class="comment">#34; &amp;quot; 双引号Quotation mark </span></span><br><span class="line"><span class="comment"># &amp;#35; — 数字标志Number sign </span></span><br><span class="line">$ &amp;<span class="comment">#36; — 美元标志Dollar sign </span></span><br><span class="line">% &amp;<span class="comment">#37; — 百分号Percent sign </span></span><br><span class="line">&amp; &amp;<span class="comment">#38; &amp;amp; Ampersand </span></span><br><span class="line">‘ &amp;<span class="comment">#39; — 单引号Apostrophe </span></span><br><span class="line">( &amp;<span class="comment">#40; — 小括号左边部分Left parenthesis </span></span><br><span class="line">) &amp;<span class="comment">#41; — 小括号右边部分Right parenthesis </span></span><br><span class="line">* &amp;<span class="comment">#42; — 星号Asterisk </span></span><br><span class="line">+ &amp;<span class="comment">#43; — 加号Plus sign </span></span><br><span class="line">&lt; &amp;<span class="comment">#60; &amp;lt; 小于号Less than </span></span><br><span class="line">= &amp;<span class="comment">#61; — 等于符号Equals sign </span></span><br><span class="line">&gt; &amp;<span class="comment">#62; &amp;gt; 大于号Greater than </span></span><br><span class="line">? &amp;<span class="comment">#63; — 问号Question mark </span></span><br><span class="line">@ &amp;<span class="comment">#64; — Commercial at </span></span><br><span class="line">[ &amp;<span class="comment">#91; --- 中括号左边部分Left square bracket </span></span><br><span class="line">\ &amp;<span class="comment">#92; --- 反斜杠Reverse solidus (backslash) </span></span><br><span class="line">] &amp;<span class="comment">#93; — 中括号右边部分Right square bracket </span></span><br><span class="line">&#123; &amp;<span class="comment">#123; — 大括号左边部分Left curly brace </span></span><br><span class="line">| &amp;<span class="comment">#124; — 竖线Vertical bar </span></span><br><span class="line">&#125; &amp;<span class="comment">#125; — 大括号右边部分Right curly brace</span></span><br></pre></td></tr></table></figure><blockquote><p>特别注意的是小括号 ( ) 大括号 { } ,如果不小心写了,你执行hexo s –debug可能报一些莫名其妙的错误!<br><a href="http://www.cnblogs.com/xcsn/p/3559624.html" target="_blank" rel="noopener">这里还有更多关于特殊字符如何转义的内容</a></p></blockquote><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="(1) 标题"></a>(1) 标题</h2><p>在文字前加上#号</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br><span class="line"></span><br><span class="line"># 大标题</span><br><span class="line"></span><br><span class="line">## 小标题</span><br></pre></td></tr></table></figure><p>预览效果：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="大标题"><a href="#大标题" class="headerlink" title="大标题"></a>大标题</h1><h2 id="小标题"><a href="#小标题" class="headerlink" title="小标题"></a>小标题</h2><h2 id="粗体斜体"><a href="#粗体斜体" class="headerlink" title="粗体斜体"></a>粗体斜体</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*斜体文本*    _斜体文本_</span><br><span class="line">**粗体文本**    __粗体文本__</span><br><span class="line">***粗斜体文本***    ___粗斜体文本___123</span><br></pre></td></tr></table></figure><p>预览效果：<br><em>斜体文本</em> <em>斜体文本</em><br><strong>粗体文本</strong> <strong>粗体文本</strong></p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">常用链接方法</span><br><span class="line">文字链接 [链接名称](https://xjc5772.github.io)</span><br><span class="line">网址链接 &lt;https://xjc5772.github.io&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">高级链接技巧</span><br><span class="line">这个链接用 1 作为网址变量 [Google][1].</span><br><span class="line">这个链接用 baidu 作为网址变量 [Baidu!][baidu].</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">  [1]: http://www.google.com/</span><br><span class="line">  [Baidu]: http://www.baidu.com/</span><br></pre></td></tr></table></figure><p>预览效果：<br>文字链接 <a href="http://https://xjc5772.github.io/" target="_blank" rel="noopener">链接名称</a><br>网址链接 <a href="http://https://xjc5772.github.io/" target="_blank" rel="noopener">http://https://xjc5772.github.io</a></p><p>高级链接技巧<br>这个链接用 1 作为网址变量 <a href="http://www.google.com/" target="_blank" rel="noopener">Google</a>.<br>这个链接用 yahoo 作为网址变量 <a href="http://www.baidu.com/" target="_blank" rel="noopener">Baidu!</a>.</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>普通无序列表</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- 列表文本前使用 [减号+空格]</span><br><span class="line">+ 列表文本前使用 [加号+空格]</span><br><span class="line">* 列表文本前使用 [星号+空格]123</span><br></pre></td></tr></table></figure><p>普通有序列表</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 列表前使用 [数字+空格]</span><br><span class="line">2. 我们会自动帮你添加数字</span><br></pre></td></tr></table></figure><p>列表嵌套</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 列出所有元素：</span><br><span class="line">    - 无序列表元素 A</span><br><span class="line">        1. 元素 A 的有序子列表</span><br><span class="line">    - 前面加四个空格</span><br><span class="line">2. 列表里的多段换行：</span><br><span class="line">    前面必须加四个空格，</span><br><span class="line">    这样换行，整体的格式不会乱</span><br><span class="line">3. 列表里引用：</span><br><span class="line"></span><br><span class="line">    &gt; 前面空一行</span><br><span class="line">    &gt; 仍然需要在 &gt;  前面加四个空格</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>普通引用</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 引用文本前使用 [大于号+空格]</span><br><span class="line">&gt; 折行可以不加，新起一行都要加上哦12</span><br></pre></td></tr></table></figure><blockquote><blockquote><blockquote><p>引用里嵌套引用</p></blockquote></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 最外层引用</span><br><span class="line">&gt; &gt; 多一个 &gt; 嵌套一层引用</span><br><span class="line">&gt; &gt; &gt; 可以嵌套很多层123</span><br></pre></td></tr></table></figure><blockquote><ul><li><blockquote><ul><li>引用里嵌套列表</li></ul></blockquote></li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; - 这是引用里嵌套的一个列表</span><br><span class="line">&gt; - 还可以有子列表</span><br><span class="line">&gt;     * 子列表需要从 - 之后延后四个空格开始123</span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![图片名称](/图片地址)</span><br><span class="line">不过，也可以像网址那样对图片网址使用变量</span><br><span class="line"></span><br><span class="line">这个链接用 1 作为网址变量 [ Google] [ 1].</span><br><span class="line">然后在文档的结尾位变量赋值(网址)</span><br><span class="line">[1]: http: //www.google.com/logo.png</span><br></pre></td></tr></table></figure><p><img alt="logo" data-src="https://avatar.csdnimg.cn/8/3/C/1_qq_38496329.jpg" class="lazyload"></p><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>如果另起一行，只需在当前行结尾加 2 个空格</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在当前行的结尾加 2 个空格  </span><br><span class="line">这行就会新起一行</span><br><span class="line">如果是要起一个新段落，只需要空出一行即可。123</span><br></pre></td></tr></table></figure><h2 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h2><p>如果你有写分割线的习惯，可以新起一行输入三个减号-。当前后都有段落时，请空出一行：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">前面的段落</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">后面的段落</span><br></pre></td></tr></table></figure><h2 id="小型文本"><a href="#小型文本" class="headerlink" title="小型文本"></a>小型文本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;small&gt;文本内容&lt;/small&gt;</span><br></pre></td></tr></table></figure><p>预览效果：<br>我是正常文字<br><small>我是小型文字</small></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>Markdown的扩展语法，hexo已经支持</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| 布局           | 路径                 |</span><br><span class="line">| ------------- |:-------------------:|</span><br><span class="line">| post          | source/_posts   |  </span><br><span class="line">| page          | source           | </span><br><span class="line">| draft          | source/_drafts   |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">布局</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left"><code>post</code></td><td align="left"><code>source/_posts</code></td></tr><tr><td align="left"><code>page</code></td><td align="left"><code>source</code></td></tr><tr><td align="left"><code>draft</code></td><td align="left"><code>source/_drafts</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo文章的发布</title>
      <link href="/2019/10/28/issue/"/>
      <url>/2019/10/28/issue/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hexo文章发布"><a href="#Hexo文章发布" class="headerlink" title="Hexo文章发布"></a>Hexo文章发布</h1><h2 id="文章创建"><a href="#文章创建" class="headerlink" title="文章创建"></a>文章创建</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><blockquote><p>此处<code>layout</code>可以选择，也可以不选择。</p><ul><li><code>layout</code>指定文章的布局，默认<code>Post</code> ，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局 </li></ul></blockquote><blockquote><p> 此命令会在/source/_posts下创建一个文件名 <code>title.md</code>文件，然后就可以使用<code>markdown</code>编辑器开始写自己的博客了。</p><ul><li>那么文章编辑语法可以遵循<a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">markdownd</a>的语法</li></ul></blockquote><ul><li>打开生成的模板文章文件</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">new</span> <span class="string">post</span> <span class="comment">#博客标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="bullet">-10</span><span class="bullet">-28</span> <span class="number">21</span><span class="string">:20:57</span> <span class="comment">#创建时间</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">java</span> <span class="comment">#标签</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="模板配置（Scaffold）"><a href="#模板配置（Scaffold）" class="headerlink" title="模板配置（Scaffold）"></a>模板配置（Scaffold）</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td><td align="left"></td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td><td align="left">文章的文件名</td></tr><tr><td align="left"><code>date</code></td><td align="left">建立日期</td><td align="left">文件建立日期</td></tr><tr><td align="left"><code>updated</code></td><td align="left">更新日期</td><td align="left">文件更新日期</td></tr><tr><td align="left"><code>comments</code></td><td align="left">开启文章的评论功能</td><td align="left">true</td></tr><tr><td align="left"><code>tags</code></td><td align="left">标签（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>categories</code></td><td align="left">分类（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">覆盖文章网址</td><td align="left"></td></tr><tr><td align="left"><code>keywords</code></td><td align="left">仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</td><td align="left"></td></tr></tbody></table><h3 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h3><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建者三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><table><thead><tr><th align="left">布局</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left"><code>post</code></td><td align="left"><code>source/_posts</code></td></tr><tr><td align="left"><code>page</code></td><td align="left"><code>source</code></td></tr><tr><td align="left"><code>draft</code></td><td align="left"><code>source/_drafts</code></td></tr></tbody></table><p>更多文章编辑可参考<a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="noopener">官网文档</a></p><h2 id="文章发布异常处理"><a href="#文章发布异常处理" class="headerlink" title="文章发布异常处理"></a>文章发布异常处理</h2><h3 id="无法处理now函数异常"><a href="#无法处理now函数异常" class="headerlink" title="无法处理now函数异常"></a>无法处理<strong>now</strong>函数异常</h3><h4 id="异常内容"><a href="#异常内容" class="headerlink" title="异常内容"></a>异常内容</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">Error:</span> <span class="string">Unable</span> <span class="string">to</span> <span class="string">call</span> <span class="string">`now`,</span> <span class="string">which</span> <span class="string">is</span> <span class="string">undefined</span> <span class="string">or</span> <span class="string">falsey</span></span><br><span class="line"><span class="string">Template</span> <span class="string">render</span> <span class="attr">error:</span> <span class="string">(unknown</span> <span class="string">path)</span> <span class="string">[Line</span> <span class="number">3</span><span class="string">,</span> <span class="string">Column</span> <span class="number">253</span><span class="string">]</span></span><br><span class="line"><span class="attr">Error:</span> <span class="string">Unable</span> <span class="string">to</span> <span class="string">call</span> <span class="string">`now`,</span> <span class="string">which</span> <span class="string">is</span> <span class="string">undefined</span> <span class="string">or</span> <span class="string">falsey</span></span><br></pre></td></tr></table></figure><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><blockquote><p>这种一般是文章中使用了now( )，<code>小括号()</code>属于特殊字符,在编译文章时将now( )当函数处理了,结果找不到函数,就报错了。 </p></blockquote><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><blockquote><p> 将小括号通过<code>&amp;#40;</code>与<code>&amp;#41;</code> 进行转换为<code>小括号()</code></p></blockquote><h3 id="意外的函数体异常"><a href="#意外的函数体异常" class="headerlink" title="意外的函数体异常"></a>意外的函数体异常</h3><h4 id="异常内容-1"><a href="#异常内容-1" class="headerlink" title="异常内容"></a>异常内容</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">FATAL</span> <span class="string">(unknown</span> <span class="string">path)</span> <span class="string">[Line</span> <span class="number">14</span><span class="string">,</span> <span class="string">Column</span> <span class="number">6</span><span class="string">]</span></span><br><span class="line">  <span class="string">unexpected</span> <span class="attr">token:</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">Template</span> <span class="string">render</span> <span class="attr">error:</span> <span class="string">(unknown</span> <span class="string">path)</span> <span class="string">[Line</span> <span class="number">14</span><span class="string">,</span> <span class="string">Column</span> <span class="number">6</span><span class="string">]</span></span><br><span class="line">  <span class="string">unexpected</span> <span class="attr">token:</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><h4 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h4><blockquote><p> 这类异常一般是文章中使用了<code>大括号 {}</code> ，这很容易被判断为函数或者语句块儿的开始或者结尾，而导致编译不通过。</p></blockquote><h4 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h4><blockquote><p> 将大括号的通过<code>&amp;#123;</code>与<code>&amp;#125;</code>进行转换为<code>大括号{}</code></p></blockquote><h2 id="如何删除文章"><a href="#如何删除文章" class="headerlink" title="如何删除文章"></a>如何删除文章</h2><p>删除文章的很简单，先删除本地文件，然后通过生成和部署命令进而将远程仓库中的文件也一并删除。具体来说，以最开始默认形成的helloworld.md这篇文章为例。</p><blockquote><p>首先进入到source / _post 文件夹中，找到helloworld.md文件，在本地直接执行删除。然后依次执行<code>hexo g</code>，<code>hexo d</code>，再去主页查看你就会发现你的博客上面已经空空如也了，这就是如何删除文章的方法。</p></blockquote><hr><p>上述的各类异常可以参考<a href="https://xjc5772.github.io/2019/10/29/MarkdownGrammar/">Markdown语法特殊字符处理</a>总之，注意小心这些特殊字符，Hexo有点恶心的就在此处，有的该转义转义，该标记标记，能避免的避免特殊字符，祝大家都顺顺利利的跑起来啊</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 异常处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题安装与配置</title>
      <link href="/2019/10/27/Hexo%20theme/"/>
      <url>/2019/10/27/Hexo%20theme/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hexo主题安装与配置"><a href="#Hexo主题安装与配置" class="headerlink" title="Hexo主题安装与配置"></a>Hexo主题安装与配置</h1><h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p>　Hexo初始化之后默认的主题是<code>landscape</code>，当然，如果想要更换自己喜欢的主题，可以在Hexo官方给出的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a>中挑选喜欢的主题文件，点进去后还可以看见其中具体样式以作参考，随后在GitHub中搜索你要的主题名称，里面都会有该主题的如何使用的介绍。</p><blockquote><p>以下操作都得在博客的根目录进行安装</p></blockquote><p>此处以<code>butterfly</code>为例</p><h3 id="挑选主题"><a href="#挑选主题" class="headerlink" title="挑选主题"></a>挑选主题</h3><ul><li><p>到<a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo</a>官网看了下<code>butterfly</code>的样式，emm，还是很不错的，就它了</p><p>![挑选butterfly主题](./hexo theme/select_butterfly.png)</p></li></ul><blockquote><p>于是我点进去看了下…emm，很好看，就它了</p></blockquote><h3 id="搜寻主题"><a href="#搜寻主题" class="headerlink" title="搜寻主题"></a>搜寻主题</h3><blockquote><p>到GitHub里去搜索<code>Butterfly</code></p></blockquote><p>![GitHub-butterfly](./hexo theme/select_butterfly.png)</p><blockquote><p>直接点进去</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>![butterfly-安装](./hexo theme/butterfly_install.png)</p><h3 id="配置应用"><a href="#配置应用" class="headerlink" title="配置应用"></a>配置应用</h3><ul><li><p>安装渲染器（然后你会等很久很久，看部复联4吧🤭）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-renderer-jade hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p></li></ul><blockquote><p> 修改hexo配置文件<code>_config.yml</code>，把主题替换<code>Butterfly</code> </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: Butterfly</span><br></pre></td></tr></table></figure></blockquote><ul><li>然后三步走</li></ul><blockquote><ol><li>hexo clean</li><li>hexo g</li><li>hexo d</li></ol></blockquote><h1 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h1><h2 id="桃心点击效果"><a href="#桃心点击效果" class="headerlink" title="桃心点击效果"></a>桃心点击效果</h2><ul><li>在<code>/themes/*/source/js/src</code>下新建文件<code>clicklove.js</code>，接着把以下粘贴到<code>clicklove.js</code>文件中。 </li></ul><blockquote><p>注：此处 * 表示任意的主题文件目录，例如<code>/themes/butterfly/source/js/src</code></p></blockquote><ul><li>在<code>\themes\*\layout\_layout.swig</code>文件末尾添加</li></ul><h3 id="clicklove代码："><a href="#clicklove代码：" class="headerlink" title="clicklove代码："></a>clicklove代码：</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 爱心特效 */</span></span><br><span class="line"></span><br><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; s.length; e++) s[e].alpha &lt;= <span class="number">0</span> ? (t.body.removeChild(s[e].el), s.splice(e, <span class="number">1</span>)) : (s[e].y--, s[e].scale += <span class="number">.004</span>, s[e].alpha -= <span class="number">.013</span>, s[e].el.style.cssText = <span class="string">"left:"</span> + s[e].x + <span class="string">"px;top:"</span> + s[e].y + <span class="string">"px;opacity:"</span> + s[e].alpha + <span class="string">";transform:scale("</span> + s[e].scale + <span class="string">","</span> + s[e].scale + <span class="string">") rotate(45deg);background:"</span> + s[e].color + <span class="string">";z-index:99999"</span>);</span><br><span class="line">    requestAnimationFrame(r)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">"function"</span> == <span class="keyword">typeof</span> e.onclick &amp;&amp; e.onclick;</span><br><span class="line">    e.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      t &amp;&amp; t(), o(e)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.createElement(<span class="string">"div"</span>);</span><br><span class="line">    a.className = <span class="string">"heart"</span>, s.push(&#123;</span><br><span class="line">      el: a,</span><br><span class="line">      x: e.clientX - <span class="number">5</span>,</span><br><span class="line">      y: e.clientY - <span class="number">5</span>,</span><br><span class="line">      scale: <span class="number">1</span>,</span><br><span class="line">      alpha: <span class="number">1</span>,</span><br><span class="line">      color: c()</span><br><span class="line">    &#125;), t.body.appendChild(a)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.createElement(<span class="string">"style"</span>);</span><br><span class="line">    a.type = <span class="string">"text/css"</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      a.appendChild(t.createTextNode(e))</span><br><span class="line">    &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">      a.styleSheet.cssText = e</span><br><span class="line">    &#125;</span><br><span class="line">    t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"rgb("</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">")"</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> s = [];</span><br><span class="line">  e.requestAnimationFrame = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    setTimeout(e, <span class="number">1e3</span> / <span class="number">60</span>)</span><br><span class="line">  &#125;, i(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>), n(), r()</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure> <!-- 页面点击小红心 --><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/clicklove.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="例图："><a href="#例图：" class="headerlink" title="例图："></a>例图：</h3><p>![小红心点击效果](./hexo theme/click_love.png)</p><h2 id="富强-民主点击效果"><a href="#富强-民主点击效果" class="headerlink" title="富强/民主点击效果"></a>富强/民主点击效果</h2><h3 id="clicksocialvalue代码："><a href="#clicksocialvalue代码：" class="headerlink" title="clicksocialvalue代码："></a>clicksocialvalue代码：</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 社会主体核心价值观效果 */</span></span><br><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"rgb("</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">")"</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  $(<span class="string">"body"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"富强"</span>, <span class="string">"民主"</span>, <span class="string">"文明"</span>, <span class="string">"和谐"</span>, <span class="string">"自由"</span>, <span class="string">"平等"</span>, <span class="string">"公正"</span>, <span class="string">"法治"</span>, <span class="string">"爱国"</span>, <span class="string">"敬业"</span>, <span class="string">"诚信"</span>, <span class="string">"友善"</span>);</span><br><span class="line">    <span class="keyword">var</span> $i = $(<span class="string">"&lt;span/&gt;"</span>).text(a[a_idx]);</span><br><span class="line">    a_idx = (a_idx + <span class="number">1</span>) % a.length;</span><br><span class="line">    <span class="keyword">var</span> x = e.pageX,</span><br><span class="line">      y = e.pageY;</span><br><span class="line">    $i.css(&#123;</span><br><span class="line">      <span class="string">"z-index"</span>: <span class="number">100000000</span>,</span><br><span class="line">      <span class="string">"top"</span>: y - <span class="number">20</span>,</span><br><span class="line">      <span class="string">"left"</span>: x,</span><br><span class="line">      <span class="string">"position"</span>: <span class="string">"absolute"</span>,</span><br><span class="line">      <span class="string">"font-weight"</span>: <span class="string">"bold"</span>,</span><br><span class="line">      <span class="string">"color"</span>: c(),</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">"body"</span>).append($i);</span><br><span class="line">    $i.animate(&#123;</span><br><span class="line">      <span class="string">"top"</span>: y - <span class="number">180</span>,</span><br><span class="line">      <span class="string">"opacity"</span>: <span class="number">0</span></span><br><span class="line">    &#125;, <span class="number">1500</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      $i.remove();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><!-- 页面点击富强、民主 --><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/clicksocialvalue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="例图：-1"><a href="#例图：-1" class="headerlink" title="例图："></a>例图：</h3><p>![富强/民主点击效果](./hexo theme/click_democracy.png)</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Hexo主题 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo安装与部署</title>
      <link href="/2019/10/27/Init/"/>
      <url>/2019/10/27/Init/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hexo博客搭建与部署"><a href="#Hexo博客搭建与部署" class="headerlink" title="Hexo博客搭建与部署"></a>Hexo博客搭建与部署</h1><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>.（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</p><ol><li>安装Node.js</li><li>安装Git</li></ol><blockquote><p><em>安装过程另附</em></p></blockquote><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p>安装好上述的两个软件，搭建好环境后就可以开始搞一搞了</p><ol><li>打开Git命令行(Git bash)运行一下命令——安装Hexo</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. npm install -g hexo-cli</span><br><span class="line">2. npm i -g hexo</span><br></pre></td></tr></table></figure><ol start="2"><li><p>初始化Hexo，在命令行（即<code>Git Bash</code>）依次运行以下命令即可：</p><blockquote><p>以下，<code>&lt;folder&gt;</code>即存放Hexo初始化文件的路径， 即站点目录</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>​    新建完成后，在路径下，会产生这些文件和文件夹：</p><p><strong>注</strong>：</p><ul><li><p>hexo相关命令均在<strong>站点目录</strong>下，用<strong><code>Git Bash</code></strong>运行。</p></li><li><p>站点配置文件：站点目录下的<code>_config.yml</code>。</p></li></ul><p>路径为<code>&lt;folder&gt;\_config.yml</code></p><ul><li>主题配置文件：站点目录下的<code>themes</code>文件夹下的，主题文件夹下的<code>_config.yml</code>。</li></ul><p>路径为<code>&lt;folder&gt;\themes\&lt;主题文件夹&gt;\_config.yml</code></p></blockquote><ol start="3"><li>启动服务器。在路径下，命令行（即<code>Git Bash</code>）输入以下命令，运行即可：</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><ol start="4"><li>浏览器访问网址： <code>http://localhost:4000/</code></li></ol><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><table><thead><tr><th align="center">资源</th><th align="center">内容/作用</th></tr></thead><tbody><tr><td align="center">package.json</td><td align="center">应用程序的信息。</td></tr><tr><td align="center">scaffolds</td><td align="center">模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</td></tr><tr><td align="center">source</td><td align="center">资源文件夹是存放用户资源的地方</td></tr><tr><td align="center">themes</td><td align="center">主题 文件夹。Hexo 会根据主题来生成静态页面。</td></tr><tr><td align="center">_config.yml</td><td align="center">网站的 配置 信息，您可以在此配置大部分的参数。</td></tr></tbody></table><h4 id="常用几个配置文件"><a href="#常用几个配置文件" class="headerlink" title="常用几个配置文件"></a>常用几个配置文件</h4><h5 id="全局配置文件"><a href="#全局配置文件" class="headerlink" title="全局配置文件"></a>全局配置文件</h5><ul><li><strong>Hexo/_config.yml</strong>    –（<strong>Hexo代表博客根目录</strong>）</li></ul><blockquote><p>根目录下的<a href>_config.yml</a>，用作配置网页全局的文件</p></blockquote><h6 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h6><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>title</code></td><td align="left">网站标题</td></tr><tr><td align="left"><code>subtitle</code></td><td align="left">网站副标题</td></tr><tr><td align="left"><code>description</code></td><td align="left">网站描述</td></tr><tr><td align="left"><code>keywords</code></td><td align="left">网站的关键词。使用半角逗号 <code>,</code> 分隔多个关键词。</td></tr><tr><td align="left"><code>author</code></td><td align="left">您的名字</td></tr><tr><td align="left"><code>language</code></td><td align="left">网站使用的语言</td></tr><tr><td align="left"><code>timezone</code></td><td align="left">网站时区。Hexo 默认使用您电脑的时区。<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="noopener">时区列表</a>。比如说：<code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。</td></tr></tbody></table><blockquote><p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p></blockquote><h6 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h6><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>url</code></td><td align="left">网址</td><td align="left"></td></tr><tr><td align="left"><code>root</code></td><td align="left">网站根目录</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks" target="_blank" rel="noopener">永久链接</a> 格式</td><td align="left"><code>:year/:month/:day/:title/</code></td></tr><tr><td align="left"><code>permalink_defaults</code></td><td align="left">永久链接中各部分的默认值</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls</code></td><td align="left">改写 <a href="https://hexo.io/zh-cn/docs/variables" target="_blank" rel="noopener"><code>permalink</code></a> 的值来美化 URL</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls.trailing_index</code></td><td align="left">是否在永久链接中保留尾部的 <code>index.html</code>，设置为 <code>false</code> 时去除</td><td align="left"><code>true</code></td></tr></tbody></table><p><strong>网站存放在子目录</strong></p><blockquote><p>如果您的网站存放在子目录中，例如 <code>http://yoursite.com/hexo</code>，则请将您的 <code>url</code> 设为 <code>http://yoursite.com/blog</code> 并把 <code>root</code> 设为 <code>/hexo/</code>。</p></blockquote><ul><li><strong>blog/themes/next/_config.yml</strong>    –（<strong>next代表当前使用的主题文件目录</strong>）</li></ul><blockquote><p>主题目录下的<a href>_config.yml</a>，用作配置主题的文件</p></blockquote><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="部署到GItHub"><a href="#部署到GItHub" class="headerlink" title="部署到GItHub"></a>部署到GItHub</h3><ul><li>创建一个<code>repository——版本库</code>，名称为<code>yourname.github.io</code>，其中<code>yourname</code>是你的GitHub名称，按照这个规则创建才有用</li></ul><blockquote><p>eg：<a href="https://github.com/xjc5772/xjc5772.github.io" target="_blank" rel="noopener">xjc5772.github.io</a>  这是我的GItHub命名</p></blockquote><p><img alt="GitHub库的创建" data-src="https://i.loli.net/2019/10/30/WkmKsHUtwQglj2v.png" class="lazyload"></p><ul><li>接着在GitBash中，配置GitHub的账户信息（YourName和YourEmail换成GitHub的用户信息）</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"YourName"</span></span><br><span class="line">$ git config --global user.email <span class="string">"YourEmail"</span></span><br></pre></td></tr></table></figure><p>若怕命令错处的话，可以键入命令键入下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config user.name</span><br><span class="line">$ git config user.email</span><br></pre></td></tr></table></figure><ul><li>创建SSH。生成SSH。然后按下图的方式找到<code>id_rsa.pub</code>，查看<code>id_rsa.pub</code>，获取SSH</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"YourEmail"</span></span><br><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ cat id_rsa.pub</span><br></pre></td></tr></table></figure><ul><li>配置SSH。将获取的SSH放到GitHub中</li></ul><blockquote><p>添加一个 <code>New SSH key</code> ，title随便取，key就填刚刚那一段。</p></blockquote><p><img alt="配置SSH" data-src="https://i.loli.net/2019/10/30/DXHn3y2xLtb7alO.png" class="lazyload"></p><p><img alt="添加SSH" data-src="https://i.loli.net/2019/10/30/BQPYkKhNWwJvnaA.png" class="lazyload"></p><blockquote><p>在Gitbash中验证是否添加成功：<code>ssh -T git@github.com</code></p></blockquote><ul><li>配置<code>_config.yml</code>。打开根目录下的<code>_config.yml</code>，修改文件配置（<em>冒号之后都是有一个半角空格的</em>）</li></ul><blockquote><p>url: <a href="https://YourgithubName.github.io/" target="_blank" rel="noopener">https://YourgithubName.github.io/</a></p></blockquote><blockquote><p>deploy:<br>    type: git<br>    repo: <a href="https://github.com/YourgithubName/YourgithubName.github.io.git" target="_blank" rel="noopener">https://github.com/YourgithubName/YourgithubName.github.io.git</a><br>    branch: master</p></blockquote><p><strong>deploy</strong></p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>repo</code></td><td align="left">库（Repository）地址</td></tr><tr><td align="left"><code>branch</code></td><td align="left">分支名称。如果不指定，则默认值为 master</td></tr><tr><td align="left"><code>message</code></td><td align="left">自定义提交信息 (默认为  Site updated: &#123; &#123;  now(‘YYYY-MM-DD HH:mm:ss’) &#125; &#125; )</td></tr></tbody></table><ul><li>安装<code>deploy-git</code>。安装部署命令，这样才能用命令部署到GitHub</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ul><li>接着依次执行下列命令：</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><blockquote><p>hexo clean清除了你之前生成的东西，也可以不加。</p><p>hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写</p><p>hexo deploy 部署文章，可以用hexo d缩写</p><p>注意deploy时可能要你输入username和password</p></blockquote><ul><li>在浏览器中输入<code>http://yourgithubname.github.io</code>就可以看到你的个人博客啦，嗨不嗨！</li><li>感觉gitbash中东西太多的时候输入<code>clear</code>命令清空。</li></ul><blockquote><p>后续会更新Hexo的主题安装与配置，毕竟一个好的、优美的页面更能给人带来愉悦感</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/10/20/hello-world/"/>
      <url>/2019/10/20/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
